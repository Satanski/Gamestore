// <auto-generated />
using System;
using Gamestore.DAL.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gamestore.DAL.Migrations
{
    [DbContext(typeof(GamestoreContext))]
    [Migration("20240619082208_Comments")]
    partial class Comments
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Gamestore.DAL.Entities.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentCommentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("ParentCommentId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Gamestore.DAL.Entities.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<Guid>("PublisherId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("UnitInStock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Key")
                        .IsUnique();

                    b.HasIndex("PublisherId");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ea63c0ce-2fda-450d-a347-6eabbe6047fc"),
                            Description = "Rpg game",
                            Discount = 10,
                            Key = "BG",
                            Name = "Baldurs Gate",
                            Price = 250.0,
                            PublisherId = new Guid("22222222-2222-2222-2222-222222222222"),
                            UnitInStock = 15
                        },
                        new
                        {
                            Id = new Guid("223b4e32-52c9-4611-9e7e-f9a4ec915344"),
                            Description = "Racing game",
                            Discount = 0,
                            Key = "TD",
                            Name = "Tedt Drive",
                            Price = 150.0,
                            PublisherId = new Guid("11111111-1111-1111-1111-111111111111"),
                            UnitInStock = 2
                        });
                });

            modelBuilder.Entity("Gamestore.DAL.Entities.GameGenre", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GenreId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GameId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("GameGenres");
                });

            modelBuilder.Entity("Gamestore.DAL.Entities.GamePlatform", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlatformId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GameId", "PlatformId");

                    b.HasIndex("PlatformId");

                    b.ToTable("GamePlatforms");
                });

            modelBuilder.Entity("Gamestore.DAL.Entities.Genre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("ParentGenreId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("421b1e76-8965-4388-ae35-f7c448369d72"),
                            Name = "Strategy"
                        },
                        new
                        {
                            Id = new Guid("744c3168-e8be-4310-aa75-52a8baa3372f"),
                            Name = "RTS",
                            ParentGenreId = new Guid("421b1e76-8965-4388-ae35-f7c448369d72")
                        },
                        new
                        {
                            Id = new Guid("9d8acf79-75db-41b1-847c-f4f83a971e32"),
                            Name = "TBS",
                            ParentGenreId = new Guid("421b1e76-8965-4388-ae35-f7c448369d72")
                        },
                        new
                        {
                            Id = new Guid("27a4a84a-0ae5-41be-8904-dc6d6bb276b3"),
                            Name = "RPG"
                        },
                        new
                        {
                            Id = new Guid("3d9ee804-9049-4e2b-91ca-f09a8732450a"),
                            Name = "Sports"
                        },
                        new
                        {
                            Id = new Guid("c4800eaf-aea5-43ad-be2b-169151480b26"),
                            Name = "Races"
                        },
                        new
                        {
                            Id = new Guid("16b79069-baca-4324-a2e5-221353fa7500"),
                            Name = "Rally",
                            ParentGenreId = new Guid("c4800eaf-aea5-43ad-be2b-169151480b26")
                        },
                        new
                        {
                            Id = new Guid("9319f56e-0ddd-40ce-b9c3-34586b1d2101"),
                            Name = "Arcade",
                            ParentGenreId = new Guid("c4800eaf-aea5-43ad-be2b-169151480b26")
                        },
                        new
                        {
                            Id = new Guid("477d11ca-35e8-4e95-8996-947954af2866"),
                            Name = "Formula",
                            ParentGenreId = new Guid("c4800eaf-aea5-43ad-be2b-169151480b26")
                        },
                        new
                        {
                            Id = new Guid("5c1d3cc3-cf1d-4f1a-abb7-217f948516cf"),
                            Name = "Off-road",
                            ParentGenreId = new Guid("c4800eaf-aea5-43ad-be2b-169151480b26")
                        },
                        new
                        {
                            Id = new Guid("b6daa2ce-6e33-483c-b1c0-f2cd3c017263"),
                            Name = "Action"
                        },
                        new
                        {
                            Id = new Guid("aeeedc4f-283e-47cd-8dbb-0c553ad8a9c2"),
                            Name = "FPS",
                            ParentGenreId = new Guid("b6daa2ce-6e33-483c-b1c0-f2cd3c017263")
                        },
                        new
                        {
                            Id = new Guid("75b7c0a6-ef90-496b-9fcb-020f6ad07a5b"),
                            Name = "TPS",
                            ParentGenreId = new Guid("b6daa2ce-6e33-483c-b1c0-f2cd3c017263")
                        },
                        new
                        {
                            Id = new Guid("68a47073-982e-43f2-879b-1807a50f8afd"),
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = new Guid("35c25707-b1fc-4bd6-a8e0-be61aa11bc95"),
                            Name = "Puzzle & Skill"
                        });
                });

            modelBuilder.Entity("Gamestore.DAL.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Gamestore.DAL.Entities.OrderGame", b =>
                {
                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Discount")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderGames");
                });

            modelBuilder.Entity("Gamestore.DAL.Entities.Platform", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Type")
                        .IsUnique();

                    b.ToTable("Platforms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1d952415-6372-4f4e-a42c-e70c2b2c1837"),
                            Type = "Mobile"
                        },
                        new
                        {
                            Id = new Guid("5595b8e3-51c0-47d6-9a3b-54ab894b861d"),
                            Type = "Browser"
                        },
                        new
                        {
                            Id = new Guid("2a7b743c-a4cb-497e-a828-04207ecd1fb2"),
                            Type = "Desktop"
                        },
                        new
                        {
                            Id = new Guid("ef916963-98ee-44ae-a6c0-7f42239c649f"),
                            Type = "Console"
                        });
                });

            modelBuilder.Entity("Gamestore.DAL.Entities.Publisher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomePage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyName")
                        .IsUnique();

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            CompanyName = "Elecrtonic Arts",
                            HomePage = "www.ea.com"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            CompanyName = "Blizzard",
                            HomePage = "www.blizzard.com"
                        });
                });

            modelBuilder.Entity("Gamestore.DAL.Entities.Comment", b =>
                {
                    b.HasOne("Gamestore.DAL.Entities.Game", "Game")
                        .WithMany("Comments")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gamestore.DAL.Entities.Comment", "ParentComment")
                        .WithMany()
                        .HasForeignKey("ParentCommentId");

                    b.Navigation("Game");

                    b.Navigation("ParentComment");
                });

            modelBuilder.Entity("Gamestore.DAL.Entities.Game", b =>
                {
                    b.HasOne("Gamestore.DAL.Entities.Publisher", "Publisher")
                        .WithMany("Games")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("Gamestore.DAL.Entities.GameGenre", b =>
                {
                    b.HasOne("Gamestore.DAL.Entities.Game", "Game")
                        .WithMany("GameGenres")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Gamestore.DAL.Entities.Genre", "Genre")
                        .WithMany("GameGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("Gamestore.DAL.Entities.GamePlatform", b =>
                {
                    b.HasOne("Gamestore.DAL.Entities.Game", "Game")
                        .WithMany("GamePlatforms")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Gamestore.DAL.Entities.Platform", "Platform")
                        .WithMany("GamePlatforms")
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Platform");
                });

            modelBuilder.Entity("Gamestore.DAL.Entities.OrderGame", b =>
                {
                    b.HasOne("Gamestore.DAL.Entities.Order", "Order")
                        .WithMany("OrderGames")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Gamestore.DAL.Entities.Game", "Product")
                        .WithMany("OrderGames")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Gamestore.DAL.Entities.Game", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("GameGenres");

                    b.Navigation("GamePlatforms");

                    b.Navigation("OrderGames");
                });

            modelBuilder.Entity("Gamestore.DAL.Entities.Genre", b =>
                {
                    b.Navigation("GameGenres");
                });

            modelBuilder.Entity("Gamestore.DAL.Entities.Order", b =>
                {
                    b.Navigation("OrderGames");
                });

            modelBuilder.Entity("Gamestore.DAL.Entities.Platform", b =>
                {
                    b.Navigation("GamePlatforms");
                });

            modelBuilder.Entity("Gamestore.DAL.Entities.Publisher", b =>
                {
                    b.Navigation("Games");
                });
#pragma warning restore 612, 618
        }
    }
}
