// <auto-generated />
using System;
using Gamestore.Repository.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gamestore.Repository.Migrations
{
    [DbContext(typeof(GamestoreContext))]
    [Migration("20240521130056_AddInitialSeed")]
    partial class AddInitialSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Gamestore.Repository.Entities.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Key")
                        .IsUnique();

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            Id = new Guid("598cca88-5cf1-4d3f-982f-efec7b22d9fa"),
                            Description = "Desc",
                            Key = "Key",
                            Name = "Gra testowa nazwa"
                        });
                });

            modelBuilder.Entity("Gamestore.Repository.Entities.GameGenre", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GenreId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GameId", "GenreId");

                    b.ToTable("GameGenres");
                });

            modelBuilder.Entity("Gamestore.Repository.Entities.GamePlatform", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Platform")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GameId", "Platform");

                    b.ToTable("GamePlatforms");
                });

            modelBuilder.Entity("Gamestore.Repository.Entities.Genre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("ParentGenreId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bd73acbf-286e-4e2b-87c2-d93370cf0d8f"),
                            Name = "Strategy"
                        },
                        new
                        {
                            Id = new Guid("9b7f5548-30e9-492a-87b6-a523aeea3d77"),
                            Name = "RTS",
                            ParentGenreId = new Guid("bd73acbf-286e-4e2b-87c2-d93370cf0d8f")
                        },
                        new
                        {
                            Id = new Guid("a932d624-9f04-469f-bdf3-474925221ece"),
                            Name = "TBS",
                            ParentGenreId = new Guid("bd73acbf-286e-4e2b-87c2-d93370cf0d8f")
                        },
                        new
                        {
                            Id = new Guid("8c1da889-e9df-4c95-9a31-5cb92a6676ea"),
                            Name = "RPG"
                        },
                        new
                        {
                            Id = new Guid("0bcb396a-4c5c-4d91-8dd9-314253170b3d"),
                            Name = "Sports"
                        },
                        new
                        {
                            Id = new Guid("0bf5f3e7-30b3-452a-b858-aec7e9464e9f"),
                            Name = "Races"
                        },
                        new
                        {
                            Id = new Guid("689addc0-1f50-4709-b56f-15b4ea239301"),
                            Name = "Rally",
                            ParentGenreId = new Guid("0bf5f3e7-30b3-452a-b858-aec7e9464e9f")
                        },
                        new
                        {
                            Id = new Guid("0e460506-fb1a-4884-a353-e92564075deb"),
                            Name = "Arcade",
                            ParentGenreId = new Guid("0bf5f3e7-30b3-452a-b858-aec7e9464e9f")
                        },
                        new
                        {
                            Id = new Guid("e4fb844b-1ad4-45f0-8ec1-fa5f6a3bfcf7"),
                            Name = "Formula",
                            ParentGenreId = new Guid("0bf5f3e7-30b3-452a-b858-aec7e9464e9f")
                        },
                        new
                        {
                            Id = new Guid("e218efa6-0f74-4598-8e5e-7a4ae4122ed1"),
                            Name = "Off-road",
                            ParentGenreId = new Guid("0bf5f3e7-30b3-452a-b858-aec7e9464e9f")
                        },
                        new
                        {
                            Id = new Guid("67954f5e-533d-4018-b843-9c8293fdb812"),
                            Name = "Action"
                        },
                        new
                        {
                            Id = new Guid("94122e07-cef9-4d44-bc46-d68994cf1645"),
                            Name = "FPS",
                            ParentGenreId = new Guid("67954f5e-533d-4018-b843-9c8293fdb812")
                        },
                        new
                        {
                            Id = new Guid("b837e8b1-2ced-4401-8a07-9be1347e56d4"),
                            Name = "TPS",
                            ParentGenreId = new Guid("67954f5e-533d-4018-b843-9c8293fdb812")
                        },
                        new
                        {
                            Id = new Guid("2efaafb1-fe1f-4e96-88f2-d6bd2f96b722"),
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = new Guid("81632d54-df13-421d-8199-66df47a421c0"),
                            Name = "Puzzle & Skill"
                        });
                });

            modelBuilder.Entity("Gamestore.Repository.Entities.Platform", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Type")
                        .IsUnique();

                    b.ToTable("Platforms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4ff2d831-0a0a-4400-9b85-4c06dfec15cd"),
                            Type = "Mobile"
                        },
                        new
                        {
                            Id = new Guid("290954a9-b253-431f-a5b9-c7a355388e80"),
                            Type = "Browser"
                        },
                        new
                        {
                            Id = new Guid("09e1fcba-7058-4355-b133-f9e70560296b"),
                            Type = "Desktop"
                        },
                        new
                        {
                            Id = new Guid("4480b8d2-4c1e-422c-b751-8780dac77a0f"),
                            Type = "Console"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
