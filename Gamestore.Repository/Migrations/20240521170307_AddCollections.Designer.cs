// <auto-generated />
using System;
using Gamestore.Repository.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gamestore.Repository.Migrations
{
    [DbContext(typeof(GamestoreContext))]
    [Migration("20240521170307_AddCollections")]
    partial class AddCollections
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Gamestore.Repository.Entities.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Key")
                        .IsUnique();

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5af69f88-027b-49cf-9089-22ce337cda46"),
                            Description = "Desc",
                            Key = "Key",
                            Name = "Gra testowa nazwa"
                        });
                });

            modelBuilder.Entity("Gamestore.Repository.Entities.GameGenre", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GenreId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GameId", "GenreId");

                    b.ToTable("GameGenres");
                });

            modelBuilder.Entity("Gamestore.Repository.Entities.GamePlatform", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Platform")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GameId", "Platform");

                    b.ToTable("GamePlatforms");
                });

            modelBuilder.Entity("Gamestore.Repository.Entities.Genre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("ParentGenreId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("47539675-2761-492c-b235-18a116e9892f"),
                            Name = "Strategy"
                        },
                        new
                        {
                            Id = new Guid("bb346703-d68d-4518-b02f-ec0ab1f817ed"),
                            Name = "RTS",
                            ParentGenreId = new Guid("47539675-2761-492c-b235-18a116e9892f")
                        },
                        new
                        {
                            Id = new Guid("c2674526-b091-4248-9f53-98363a4523a2"),
                            Name = "TBS",
                            ParentGenreId = new Guid("47539675-2761-492c-b235-18a116e9892f")
                        },
                        new
                        {
                            Id = new Guid("61939340-09c4-4a30-8b2b-da1e3551ca63"),
                            Name = "RPG"
                        },
                        new
                        {
                            Id = new Guid("de9e104c-08df-4279-b468-8de90cbe3819"),
                            Name = "Sports"
                        },
                        new
                        {
                            Id = new Guid("c09db00d-3154-4f3b-b8ad-ee4a44265ff5"),
                            Name = "Races"
                        },
                        new
                        {
                            Id = new Guid("835db15b-efe3-46b2-9458-56e8d2da95a9"),
                            Name = "Rally",
                            ParentGenreId = new Guid("c09db00d-3154-4f3b-b8ad-ee4a44265ff5")
                        },
                        new
                        {
                            Id = new Guid("bda9686d-3c0d-4dad-8965-68b2b0333d9c"),
                            Name = "Arcade",
                            ParentGenreId = new Guid("c09db00d-3154-4f3b-b8ad-ee4a44265ff5")
                        },
                        new
                        {
                            Id = new Guid("0586a906-7f6f-4e5a-adc3-3cc60f22dfde"),
                            Name = "Formula",
                            ParentGenreId = new Guid("c09db00d-3154-4f3b-b8ad-ee4a44265ff5")
                        },
                        new
                        {
                            Id = new Guid("75887ad2-bd5e-4ada-bf08-577e0e863364"),
                            Name = "Off-road",
                            ParentGenreId = new Guid("c09db00d-3154-4f3b-b8ad-ee4a44265ff5")
                        },
                        new
                        {
                            Id = new Guid("77adb740-d9e0-4b28-b2ba-b9f52fb5bbc1"),
                            Name = "Action"
                        },
                        new
                        {
                            Id = new Guid("a57b35e2-339b-43c9-9cea-cf265ee62c21"),
                            Name = "FPS",
                            ParentGenreId = new Guid("77adb740-d9e0-4b28-b2ba-b9f52fb5bbc1")
                        },
                        new
                        {
                            Id = new Guid("3299d55b-e103-4edc-a12d-7aa66398325f"),
                            Name = "TPS",
                            ParentGenreId = new Guid("77adb740-d9e0-4b28-b2ba-b9f52fb5bbc1")
                        },
                        new
                        {
                            Id = new Guid("d2e5ae88-1cc2-4db9-9aaa-8de456a5bc11"),
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = new Guid("5bd20d62-a61c-4692-8507-3b6b35458260"),
                            Name = "Puzzle & Skill"
                        });
                });

            modelBuilder.Entity("Gamestore.Repository.Entities.Platform", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Type")
                        .IsUnique();

                    b.ToTable("Platforms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("17f23b51-ce66-4e62-aac7-6c5ed33400d5"),
                            Type = "Mobile"
                        },
                        new
                        {
                            Id = new Guid("5ebe150d-5c5a-4587-8eb7-7e222e3e55fe"),
                            Type = "Browser"
                        },
                        new
                        {
                            Id = new Guid("75890db0-cd9a-4207-8789-4fc0290291ba"),
                            Type = "Desktop"
                        },
                        new
                        {
                            Id = new Guid("0782dd4e-b1e7-41ea-a5e2-ad2cef0b54d9"),
                            Type = "Console"
                        });
                });

            modelBuilder.Entity("Gamestore.Repository.Entities.GameGenre", b =>
                {
                    b.HasOne("Gamestore.Repository.Entities.Game", null)
                        .WithMany("GameGenres")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gamestore.Repository.Entities.GamePlatform", b =>
                {
                    b.HasOne("Gamestore.Repository.Entities.Game", null)
                        .WithMany("GamePlatforms")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gamestore.Repository.Entities.Game", b =>
                {
                    b.Navigation("GameGenres");

                    b.Navigation("GamePlatforms");
                });
#pragma warning restore 612, 618
        }
    }
}
