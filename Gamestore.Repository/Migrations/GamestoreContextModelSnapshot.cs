// <auto-generated />
using System;
using Gamestore.DAL.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gamestore.DAL.Migrations
{
    [DbContext(typeof(GamestoreContext))]
    partial class GamestoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Gamestore.DAL.Entities.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<Guid>("PublisherId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("UnitInStock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Key")
                        .IsUnique();

                    b.HasIndex("PublisherId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("Gamestore.DAL.Entities.GameGenre", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GenreId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GameId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("GameGenres");
                });

            modelBuilder.Entity("Gamestore.DAL.Entities.GamePlatform", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlatformId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GameId", "PlatformId");

                    b.HasIndex("PlatformId");

                    b.ToTable("GamePlatforms");
                });

            modelBuilder.Entity("Gamestore.DAL.Entities.Genre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("ParentGenreId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5ea9cfcb-895d-43cc-840a-78c61fbb145f"),
                            Name = "Strategy"
                        },
                        new
                        {
                            Id = new Guid("d716dfad-336e-4298-81d0-6742bd4c6bba"),
                            Name = "RTS",
                            ParentGenreId = new Guid("5ea9cfcb-895d-43cc-840a-78c61fbb145f")
                        },
                        new
                        {
                            Id = new Guid("78934809-636e-4911-8caa-19837ce00b84"),
                            Name = "TBS",
                            ParentGenreId = new Guid("5ea9cfcb-895d-43cc-840a-78c61fbb145f")
                        },
                        new
                        {
                            Id = new Guid("7a0da694-4c7c-48ad-bb26-d60f0cfef858"),
                            Name = "RPG"
                        },
                        new
                        {
                            Id = new Guid("601a925c-e8d2-4cfa-a592-87eb5fab56ac"),
                            Name = "Sports"
                        },
                        new
                        {
                            Id = new Guid("92f488f7-357b-4eca-b651-985a03210c05"),
                            Name = "Races"
                        },
                        new
                        {
                            Id = new Guid("5925dc88-e01a-4a97-ad80-d1d2b8df8eb4"),
                            Name = "Rally",
                            ParentGenreId = new Guid("92f488f7-357b-4eca-b651-985a03210c05")
                        },
                        new
                        {
                            Id = new Guid("2f1f7c5c-3760-4f85-9914-68d293f8ea95"),
                            Name = "Arcade",
                            ParentGenreId = new Guid("92f488f7-357b-4eca-b651-985a03210c05")
                        },
                        new
                        {
                            Id = new Guid("aa8d86f0-66dd-4d3a-9ba2-2c57d9761c36"),
                            Name = "Formula",
                            ParentGenreId = new Guid("92f488f7-357b-4eca-b651-985a03210c05")
                        },
                        new
                        {
                            Id = new Guid("2a0fd9d4-6fc0-4732-a183-7e4d5db9f404"),
                            Name = "Off-road",
                            ParentGenreId = new Guid("92f488f7-357b-4eca-b651-985a03210c05")
                        },
                        new
                        {
                            Id = new Guid("288c81b8-55c9-4e37-8ce1-dd7d76772277"),
                            Name = "Action"
                        },
                        new
                        {
                            Id = new Guid("49fab0b0-d4a7-4f97-ab04-9377116ca738"),
                            Name = "FPS",
                            ParentGenreId = new Guid("288c81b8-55c9-4e37-8ce1-dd7d76772277")
                        },
                        new
                        {
                            Id = new Guid("8c2e8bb3-1710-481f-a330-8a4ebc6d04f7"),
                            Name = "TPS",
                            ParentGenreId = new Guid("288c81b8-55c9-4e37-8ce1-dd7d76772277")
                        },
                        new
                        {
                            Id = new Guid("7e022c93-b14f-40c8-b85e-618beacb2752"),
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = new Guid("824c13f4-050e-439f-abae-edc097e40407"),
                            Name = "Puzzle & Skill"
                        });
                });

            modelBuilder.Entity("Gamestore.DAL.Entities.Platform", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Type")
                        .IsUnique();

                    b.ToTable("Platforms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ebaa5feb-21f5-4abc-8c27-91f2ed8ae929"),
                            Type = "Mobile"
                        },
                        new
                        {
                            Id = new Guid("765c73bb-1c56-42dc-b92f-3357fac07bf6"),
                            Type = "Browser"
                        },
                        new
                        {
                            Id = new Guid("b762fd5c-a5c2-475c-a11c-8f178bd4bd2c"),
                            Type = "Desktop"
                        },
                        new
                        {
                            Id = new Guid("23ade31d-a9d4-4d71-8044-4378d14d35e4"),
                            Type = "Console"
                        });
                });

            modelBuilder.Entity("Gamestore.DAL.Entities.Publisher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomePage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyName")
                        .IsUnique();

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3bdf3c48-f33a-47ed-a4f0-1362e873892b"),
                            CompanyName = "Elecrtonic Arts",
                            HomePage = "www.ea.com"
                        },
                        new
                        {
                            Id = new Guid("b3049685-ae4e-4e49-8cce-3e75dce4ca16"),
                            CompanyName = "Blizzard",
                            HomePage = "www.blizzard.com"
                        });
                });

            modelBuilder.Entity("Gamestore.DAL.Entities.Game", b =>
                {
                    b.HasOne("Gamestore.DAL.Entities.Publisher", "Publisher")
                        .WithMany("Games")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("Gamestore.DAL.Entities.GameGenre", b =>
                {
                    b.HasOne("Gamestore.DAL.Entities.Game", "Game")
                        .WithMany("GameGenres")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Gamestore.DAL.Entities.Genre", "Genre")
                        .WithMany("GameGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("Gamestore.DAL.Entities.GamePlatform", b =>
                {
                    b.HasOne("Gamestore.DAL.Entities.Game", "Game")
                        .WithMany("GamePlatforms")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Gamestore.DAL.Entities.Platform", "Platform")
                        .WithMany("GamePlatforms")
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Platform");
                });

            modelBuilder.Entity("Gamestore.DAL.Entities.Game", b =>
                {
                    b.Navigation("GameGenres");

                    b.Navigation("GamePlatforms");
                });

            modelBuilder.Entity("Gamestore.DAL.Entities.Genre", b =>
                {
                    b.Navigation("GameGenres");
                });

            modelBuilder.Entity("Gamestore.DAL.Entities.Platform", b =>
                {
                    b.Navigation("GamePlatforms");
                });

            modelBuilder.Entity("Gamestore.DAL.Entities.Publisher", b =>
                {
                    b.Navigation("Games");
                });
#pragma warning restore 612, 618
        }
    }
}
