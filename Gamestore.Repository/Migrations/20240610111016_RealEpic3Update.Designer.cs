// <auto-generated />
using System;
using Gamestore.DAL.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gamestore.DAL.Migrations
{
    [DbContext(typeof(GamestoreContext))]
    [Migration("20240610111016_RealEpic3Update")]
    partial class RealEpic3Update
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Gamestore.DAL.Entities.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<Guid>("PublisherId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("UnitInStock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Key")
                        .IsUnique();

                    b.HasIndex("PublisherId");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            Id = new Guid("15fcdae8-8f4a-4053-a92f-2dc3a010a1c2"),
                            Description = "Rpg game",
                            Discount = 10,
                            Key = "BG",
                            Name = "Baldurs Gate",
                            Price = 250.0,
                            PublisherId = new Guid("22222222-2222-2222-2222-222222222222"),
                            UnitInStock = 15
                        },
                        new
                        {
                            Id = new Guid("081bc243-3020-44aa-92ae-772ed63f1447"),
                            Description = "Racing game",
                            Discount = 0,
                            Key = "TD",
                            Name = "Tedt Drive",
                            Price = 150.0,
                            PublisherId = new Guid("11111111-1111-1111-1111-111111111111"),
                            UnitInStock = 2
                        });
                });

            modelBuilder.Entity("Gamestore.DAL.Entities.GameGenre", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GenreId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GameId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("GameGenres");
                });

            modelBuilder.Entity("Gamestore.DAL.Entities.GamePlatform", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlatformId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GameId", "PlatformId");

                    b.HasIndex("PlatformId");

                    b.ToTable("GamePlatforms");
                });

            modelBuilder.Entity("Gamestore.DAL.Entities.Genre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("ParentGenreId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0a267dfc-6a87-4772-9959-8861a140d7ff"),
                            Name = "Strategy"
                        },
                        new
                        {
                            Id = new Guid("b105cfc2-110c-45a4-b4b1-c0ae49bf3e2d"),
                            Name = "RTS",
                            ParentGenreId = new Guid("0a267dfc-6a87-4772-9959-8861a140d7ff")
                        },
                        new
                        {
                            Id = new Guid("2a9e8784-d600-4a06-a5a0-4b46318985ad"),
                            Name = "TBS",
                            ParentGenreId = new Guid("0a267dfc-6a87-4772-9959-8861a140d7ff")
                        },
                        new
                        {
                            Id = new Guid("688001a0-5f22-43f2-95c4-2022570f7b94"),
                            Name = "RPG"
                        },
                        new
                        {
                            Id = new Guid("4e5f2bf4-9ecc-4ed8-b955-0def17e7dfe9"),
                            Name = "Sports"
                        },
                        new
                        {
                            Id = new Guid("6be1be5f-57b2-4f84-aa8e-2b3f7015a0cd"),
                            Name = "Races"
                        },
                        new
                        {
                            Id = new Guid("56f7fbef-18f6-4c5d-bde4-a45a1947b5c6"),
                            Name = "Rally",
                            ParentGenreId = new Guid("6be1be5f-57b2-4f84-aa8e-2b3f7015a0cd")
                        },
                        new
                        {
                            Id = new Guid("66a826b7-8e8b-40b7-b279-dd9ba0ee9416"),
                            Name = "Arcade",
                            ParentGenreId = new Guid("6be1be5f-57b2-4f84-aa8e-2b3f7015a0cd")
                        },
                        new
                        {
                            Id = new Guid("ee2fd1ac-d767-4ca5-9303-eb2a2f4a0a44"),
                            Name = "Formula",
                            ParentGenreId = new Guid("6be1be5f-57b2-4f84-aa8e-2b3f7015a0cd")
                        },
                        new
                        {
                            Id = new Guid("df0aca19-758c-414f-8908-3d4a51c4f3a2"),
                            Name = "Off-road",
                            ParentGenreId = new Guid("6be1be5f-57b2-4f84-aa8e-2b3f7015a0cd")
                        },
                        new
                        {
                            Id = new Guid("979316ee-c607-44fe-b884-c3732b1668ba"),
                            Name = "Action"
                        },
                        new
                        {
                            Id = new Guid("aef9be7a-45fb-444f-bae7-8d7fe228b3b1"),
                            Name = "FPS",
                            ParentGenreId = new Guid("979316ee-c607-44fe-b884-c3732b1668ba")
                        },
                        new
                        {
                            Id = new Guid("3b135dad-a00d-46ec-897e-5a83dfbf2639"),
                            Name = "TPS",
                            ParentGenreId = new Guid("979316ee-c607-44fe-b884-c3732b1668ba")
                        },
                        new
                        {
                            Id = new Guid("37e7af05-43a2-46a2-adf5-6221d10b735e"),
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = new Guid("3f65ebdb-c974-4f14-8150-b33f33c93f08"),
                            Name = "Puzzle & Skill"
                        });
                });

            modelBuilder.Entity("Gamestore.DAL.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Gamestore.DAL.Entities.OrderGame", b =>
                {
                    b.Property<Guid>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Discount")
                        .HasColumnType("int");

                    b.Property<Guid>("OrderId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("OrderId1");

                    b.HasIndex("ProductId");

                    b.HasIndex("OrderId", "ProductId")
                        .IsUnique();

                    b.ToTable("OrderGames");
                });

            modelBuilder.Entity("Gamestore.DAL.Entities.Platform", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Type")
                        .IsUnique();

                    b.ToTable("Platforms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b7694479-4928-4116-ac8b-fd9cbdd8c190"),
                            Type = "Mobile"
                        },
                        new
                        {
                            Id = new Guid("dab23934-42f3-4384-a633-547726737736"),
                            Type = "Browser"
                        },
                        new
                        {
                            Id = new Guid("613cd41c-757d-49eb-a3c2-ac11e24e46ed"),
                            Type = "Desktop"
                        },
                        new
                        {
                            Id = new Guid("4fa0039a-076d-486d-9f83-c0d20670c01e"),
                            Type = "Console"
                        });
                });

            modelBuilder.Entity("Gamestore.DAL.Entities.Publisher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomePage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyName")
                        .IsUnique();

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            CompanyName = "Elecrtonic Arts",
                            HomePage = "www.ea.com"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            CompanyName = "Blizzard",
                            HomePage = "www.blizzard.com"
                        });
                });

            modelBuilder.Entity("Gamestore.DAL.Entities.Game", b =>
                {
                    b.HasOne("Gamestore.DAL.Entities.Publisher", "Publisher")
                        .WithMany("Games")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("Gamestore.DAL.Entities.GameGenre", b =>
                {
                    b.HasOne("Gamestore.DAL.Entities.Game", "Game")
                        .WithMany("GameGenres")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Gamestore.DAL.Entities.Genre", "Genre")
                        .WithMany("GameGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("Gamestore.DAL.Entities.GamePlatform", b =>
                {
                    b.HasOne("Gamestore.DAL.Entities.Game", "Game")
                        .WithMany("GamePlatforms")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Gamestore.DAL.Entities.Platform", "Platform")
                        .WithMany("GamePlatforms")
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Platform");
                });

            modelBuilder.Entity("Gamestore.DAL.Entities.OrderGame", b =>
                {
                    b.HasOne("Gamestore.DAL.Entities.Order", "Order")
                        .WithMany("OrderGames")
                        .HasForeignKey("OrderId1")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Gamestore.DAL.Entities.Game", "Product")
                        .WithMany("OrderGames")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Gamestore.DAL.Entities.Game", b =>
                {
                    b.Navigation("GameGenres");

                    b.Navigation("GamePlatforms");

                    b.Navigation("OrderGames");
                });

            modelBuilder.Entity("Gamestore.DAL.Entities.Genre", b =>
                {
                    b.Navigation("GameGenres");
                });

            modelBuilder.Entity("Gamestore.DAL.Entities.Order", b =>
                {
                    b.Navigation("OrderGames");
                });

            modelBuilder.Entity("Gamestore.DAL.Entities.Platform", b =>
                {
                    b.Navigation("GamePlatforms");
                });

            modelBuilder.Entity("Gamestore.DAL.Entities.Publisher", b =>
                {
                    b.Navigation("Games");
                });
#pragma warning restore 612, 618
        }
    }
}
