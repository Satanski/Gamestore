‚
ÉD:\OneDrive\Dokumenty\Programowanie\EPAM\Repos\Gamestore\Gamestore.IdentityRepository\DIRegistrations\IdentityRepositoryServices.cs
	namespace 	
	Gamestore
 
. 
IdentityRepository &
.& '
DIRegistrations' 6
;6 7
public		 
static		 
class		 &
IdentityRepositoryServices		 .
{

 
public 

static 
void 
	Configure  
(  !
IServiceCollection! 3
services4 <
,< =
string> D
connectionStringE U
)U V
{ 
services 
. 
AddDbContext 
< 
IdentityDbContext /
>/ 0
(0 1
options1 8
=>9 ;
options< C
.C D
UseSqlServerD P
(P Q
connectionStringQ a
)a b
)b c
;c d
services 
. 
	AddScoped 
< 
IRoleRepository *
,* +
RoleRepository, :
>: ;
(; <
)< =
;= >
services 
. 
	AddScoped 
<  
IRoleClaimRepository /
,/ 0
RoleClaimRepository1 D
>D E
(E F
)F G
;G H
services 
. 
	AddScoped 
< 
IIdentityUnitOfWork .
,. /
IdentityUnitOfWork0 B
>B C
(C D
)D E
;E F
} 
} È
iD:\OneDrive\Dokumenty\Programowanie\EPAM\Repos\Gamestore\Gamestore.IdentityRepository\Entities\AppRole.cs
	namespace 	
	Gamestore
 
. 
IdentityRepository &
.& '
Identity' /
;/ 0
public 
class 
AppRole 
: 
IdentityRole #
{ 
public 

string 
? 
ParentRoleId 
{  !
get" %
;% &
set' *
;* +
}, -
public		 

virtual		 
AppRole		 
?		 

ParentRole		 &
{		' (
get		) ,
;		, -
set		. 1
;		1 2
}		3 4
}

 ß
iD:\OneDrive\Dokumenty\Programowanie\EPAM\Repos\Gamestore\Gamestore.IdentityRepository\Entities\AppUser.cs
	namespace 	
	Gamestore
 
. 
IdentityRepository &
.& '
Identity' /
;/ 0
public 
class 
AppUser 
: 
IdentityUser #
{ 
public 

DateTime 

BannedTill 
{  
get! $
;$ %
set& )
;) *
}+ ,
public		 

ICollection		 
<		 
IdentityUserRole		 '
<		' (
string		( .
>		. /
>		/ 0
	UserRoles		1 :
{		; <
get		= @
;		@ A
set		B E
;		E F
}		G H
}

 À
sD:\OneDrive\Dokumenty\Programowanie\EPAM\Repos\Gamestore\Gamestore.IdentityRepository\Entities\IdentityDbContext.cs
	namespace 	
	Gamestore
 
. 
IdentityRepository &
.& '
Entities' /
;/ 0
public		 
class		 
IdentityDbContext		 
(		 
DbContextOptions		 /
<		/ 0
IdentityDbContext		0 A
>		A B
options		C J
)		J K
:		L M
IdentityDbContext		N _
<		_ `
AppUser		` g
,		g h
AppRole		i p
,		p q
string		r x
>		x y
(		y z
options			z Å
)
		Å Ç
{

 
	protected 
override 
void 
OnModelCreating +
(+ ,
ModelBuilder, 8
builder9 @
)@ A
{ 
builder 
. 
Entity 
< 
IdentityUserLogin (
<( )
string) /
>/ 0
>0 1
(1 2
)2 3
.3 4
HasKey4 :
(: ;
l; <
=>= ?
new@ C
{D E
lF G
.G H
LoginProviderH U
,U V
lW X
.X Y
ProviderKeyY d
}e f
)f g
;g h
builder 
. 
Entity 
< 
IdentityUserRole '
<' (
string( .
>. /
>/ 0
(0 1
)1 2
.2 3
HasKey3 9
(9 :
r: ;
=>< >
new? B
{C D
rE F
.F G
UserIdG M
,M N
rO P
.P Q
RoleIdQ W
}X Y
)Y Z
;Z [
builder 
. 
Entity 
< 
IdentityUserToken (
<( )
string) /
>/ 0
>0 1
(1 2
)2 3
.3 4
HasKey4 :
(: ;
t; <
=>= ?
new@ C
{D E
tF G
.G H
UserIdH N
,N O
tP Q
.Q R
LoginProviderR _
,_ `
ta b
.b c
Namec g
}h i
)i j
;j k
builder 
. +
ApplyConfigurationsFromAssembly /
(/ 0
Assembly0 8
.8 9 
GetExecutingAssembly9 M
(M N
)N O
)O P
;P Q
} 
} ¿
kD:\OneDrive\Dokumenty\Programowanie\EPAM\Repos\Gamestore\Gamestore.IdentityRepository\Entities\RoleClaim.cs
	namespace 	
	Gamestore
 
. 
IdentityRepository &
;& '
public 
class 
	RoleClaim 
: 
IdentityRoleClaim *
<* +
string+ 1
>1 2
{ 
public 

virtual 
IdentityRole 
Role  $
{% &
get' *
;* +
set, /
;/ 0
}1 2
} Í	
ÅD:\OneDrive\Dokumenty\Programowanie\EPAM\Repos\Gamestore\Gamestore.IdentityRepository\EntityConfiguration\AppRoleConfiguration.cs
	namespace 	
	Gamestore
 
. 
IdentityRepository &
.& ' 
EntityConfigurations' ;
;; <
internal 
class	  
AppRoleConfiguration #
:$ %$
IEntityTypeConfiguration& >
<> ?
AppRole? F
>F G
{ 
public		 

void		 
	Configure		 
(		 
EntityTypeBuilder		 +
<		+ ,
AppRole		, 3
>		3 4
builder		5 <
)		< =
{

 
builder 
. 
HasOne 
( 
r 
=> 
r 
. 

ParentRole (
)( )
.) *
WithMany* 2
(2 3
)3 4
.4 5
HasForeignKey5 B
(B C
rC D
=>E G
rH I
.I J
ParentRoleIdJ V
)V W
.W X
OnDeleteX `
(` a
DeleteBehaviora o
.o p
Restrictp x
)x y
;y z
} 
} ö

kD:\OneDrive\Dokumenty\Programowanie\EPAM\Repos\Gamestore\Gamestore.IdentityRepository\IdentityUnitOfWork.cs
	namespace 	
	Gamestore
 
. 
IdentityRepository &
;& '
public 
class 
IdentityUnitOfWork 
(  
IdentityDbContext  1
context2 9
,9 : 
IRoleClaimRepository; O
roleClaimRepositoryP c
,c d
IRoleRepositorye t
roleRepository	u É
)
É Ñ
:
Ö Ü!
IIdentityUnitOfWork
á ö
{ 
private 
readonly 
IdentityDbContext &
_context' /
=0 1
context2 9
;9 :
public

 
 
IRoleClaimRepository

 
RoleClaimRepository

  3
=>

4 6
roleClaimRepository

7 J
;

J K
public 

IRoleRepository 
RoleRepository )
=>* ,
roleRepository- ;
;; <
public 

async 
Task 
	SaveAsync 
(  
)  !
{ 
await 
_context 
. 
SaveChangesAsync '
(' (
)( )
;) *
} 
} º
wD:\OneDrive\Dokumenty\Programowanie\EPAM\Repos\Gamestore\Gamestore.IdentityRepository\Interfaces\IIdentityUnitOfWork.cs
	namespace 	
	Gamestore
 
. 
IdentityRepository &
.& '

Interfaces' 1
;1 2
public 
	interface 
IIdentityUnitOfWork $
{  
IRoleClaimRepository 
RoleClaimRepository ,
{- .
get/ 2
;2 3
}4 5
IRoleRepository 
RoleRepository "
{# $
get% (
;( )
}* +
Task		 
	SaveAsync			 
(		 
)		 
;		 
}

 ˙
xD:\OneDrive\Dokumenty\Programowanie\EPAM\Repos\Gamestore\Gamestore.IdentityRepository\Interfaces\IRoleClaimRepository.cs
	namespace 	
	Gamestore
 
. 
IdentityRepository &
.& '

Interfaces' 1
;1 2
public 
	interface  
IRoleClaimRepository %
{ 
Task 
AddAsync	 
( 
	RoleClaim 
	roleClaim %
)% &
;& '
void		  
DeleteClaimsByRoleId			 
(		 
string		 $
roleId		% +
)		+ ,
;		, -

IQueryable 
< 
IdentityRoleClaim  
<  !
string! '
>' (
>( )"
GetClaimsByRoleIdAsync* @
(@ A
GuidA E
roleIdF L
)L M
;M N
} ‡
sD:\OneDrive\Dokumenty\Programowanie\EPAM\Repos\Gamestore\Gamestore.IdentityRepository\Interfaces\IRoleRepository.cs
	namespace 	
	Gamestore
 
. 
IdentityRepository &
.& '

Interfaces' 1
;1 2
public 
	interface 
IRoleRepository  
{ 
void 
Update	 
( 
AppRole 
role 
) 
; 
} ù—
ìD:\OneDrive\Dokumenty\Programowanie\EPAM\Repos\Gamestore\Gamestore.IdentityRepository\Migrations\IdentityMigrations\20240717125448_InitialCreate.cs
	namespace 	
	Gamestore
 
. 
Identityrepository &
.& '

Migrations' 1
.1 2
IdentityMigrations2 D
{ 
public 

partial 
class 
InitialCreate &
:' (
	Migration) 2
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str #
,# $
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
string& ,
>, -
(- .
type. 2
:2 3
$str4 C
,C D
nullableE M
:M N
falseO T
)T U
,U V
Name 
= 
table  
.  !
Column! '
<' (
string( .
>. /
(/ 0
type0 4
:4 5
$str6 E
,E F
	maxLengthG P
:P Q
$numR U
,U V
nullableW _
:_ `
truea e
)e f
,f g
NormalizedName "
=# $
table% *
.* +
Column+ 1
<1 2
string2 8
>8 9
(9 :
type: >
:> ?
$str@ O
,O P
	maxLengthQ Z
:Z [
$num\ _
,_ `
nullablea i
:i j
truek o
)o p
,p q
ConcurrencyStamp $
=% &
table' ,
., -
Column- 3
<3 4
string4 :
>: ;
(; <
type< @
:@ A
$strB Q
,Q R
nullableS [
:[ \
true] a
)a b
} 
, 
constraints   
:   
table   "
=>  # %
{!! 
table"" 
."" 

PrimaryKey"" $
(""$ %
$str""% 5
,""5 6
x""7 8
=>""9 ;
x""< =
.""= >
Id""> @
)""@ A
;""A B
}## 
)## 
;## 
migrationBuilder%% 
.%% 
CreateTable%% (
(%%( )
name&& 
:&& 
$str&& #
,&&# $
columns'' 
:'' 
table'' 
=>'' !
new''" %
{(( 
Id)) 
=)) 
table)) 
.)) 
Column)) %
<))% &
string))& ,
>)), -
())- .
type)). 2
:))2 3
$str))4 C
,))C D
nullable))E M
:))M N
false))O T
)))T U
,))U V
UserName** 
=** 
table** $
.**$ %
Column**% +
<**+ ,
string**, 2
>**2 3
(**3 4
type**4 8
:**8 9
$str**: I
,**I J
	maxLength**K T
:**T U
$num**V Y
,**Y Z
nullable**[ c
:**c d
true**e i
)**i j
,**j k
NormalizedUserName++ &
=++' (
table++) .
.++. /
Column++/ 5
<++5 6
string++6 <
>++< =
(++= >
type++> B
:++B C
$str++D S
,++S T
	maxLength++U ^
:++^ _
$num++` c
,++c d
nullable++e m
:++m n
true++o s
)++s t
,++t u
Email,, 
=,, 
table,, !
.,,! "
Column,," (
<,,( )
string,,) /
>,,/ 0
(,,0 1
type,,1 5
:,,5 6
$str,,7 F
,,,F G
	maxLength,,H Q
:,,Q R
$num,,S V
,,,V W
nullable,,X `
:,,` a
true,,b f
),,f g
,,,g h
NormalizedEmail-- #
=--$ %
table--& +
.--+ ,
Column--, 2
<--2 3
string--3 9
>--9 :
(--: ;
type--; ?
:--? @
$str--A P
,--P Q
	maxLength--R [
:--[ \
$num--] `
,--` a
nullable--b j
:--j k
true--l p
)--p q
,--q r
EmailConfirmed.. "
=..# $
table..% *
...* +
Column..+ 1
<..1 2
bool..2 6
>..6 7
(..7 8
type..8 <
:..< =
$str..> C
,..C D
nullable..E M
:..M N
false..O T
)..T U
,..U V
PasswordHash//  
=//! "
table//# (
.//( )
Column//) /
</// 0
string//0 6
>//6 7
(//7 8
type//8 <
://< =
$str//> M
,//M N
nullable//O W
://W X
true//Y ]
)//] ^
,//^ _
SecurityStamp00 !
=00" #
table00$ )
.00) *
Column00* 0
<000 1
string001 7
>007 8
(008 9
type009 =
:00= >
$str00? N
,00N O
nullable00P X
:00X Y
true00Z ^
)00^ _
,00_ `
ConcurrencyStamp11 $
=11% &
table11' ,
.11, -
Column11- 3
<113 4
string114 :
>11: ;
(11; <
type11< @
:11@ A
$str11B Q
,11Q R
nullable11S [
:11[ \
true11] a
)11a b
,11b c
PhoneNumber22 
=22  !
table22" '
.22' (
Column22( .
<22. /
string22/ 5
>225 6
(226 7
type227 ;
:22; <
$str22= L
,22L M
nullable22N V
:22V W
true22X \
)22\ ]
,22] ^ 
PhoneNumberConfirmed33 (
=33) *
table33+ 0
.330 1
Column331 7
<337 8
bool338 <
>33< =
(33= >
type33> B
:33B C
$str33D I
,33I J
nullable33K S
:33S T
false33U Z
)33Z [
,33[ \
TwoFactorEnabled44 $
=44% &
table44' ,
.44, -
Column44- 3
<443 4
bool444 8
>448 9
(449 :
type44: >
:44> ?
$str44@ E
,44E F
nullable44G O
:44O P
false44Q V
)44V W
,44W X

LockoutEnd55 
=55  
table55! &
.55& '
Column55' -
<55- .
DateTimeOffset55. <
>55< =
(55= >
type55> B
:55B C
$str55D T
,55T U
nullable55V ^
:55^ _
true55` d
)55d e
,55e f
LockoutEnabled66 "
=66# $
table66% *
.66* +
Column66+ 1
<661 2
bool662 6
>666 7
(667 8
type668 <
:66< =
$str66> C
,66C D
nullable66E M
:66M N
false66O T
)66T U
,66U V
AccessFailedCount77 %
=77& '
table77( -
.77- .
Column77. 4
<774 5
int775 8
>778 9
(779 :
type77: >
:77> ?
$str77@ E
,77E F
nullable77G O
:77O P
false77Q V
)77V W
}88 
,88 
constraints99 
:99 
table99 "
=>99# %
{:: 
table;; 
.;; 

PrimaryKey;; $
(;;$ %
$str;;% 5
,;;5 6
x;;7 8
=>;;9 ;
x;;< =
.;;= >
Id;;> @
);;@ A
;;;A B
}<< 
)<< 
;<< 
migrationBuilder>> 
.>> 
CreateTable>> (
(>>( )
name?? 
:?? 
$str?? (
,??( )
columns@@ 
:@@ 
table@@ 
=>@@ !
new@@" %
{AA 
IdBB 
=BB 
tableBB 
.BB 
ColumnBB %
<BB% &
intBB& )
>BB) *
(BB* +
typeBB+ /
:BB/ 0
$strBB1 6
,BB6 7
nullableBB8 @
:BB@ A
falseBBB G
)BBG H
.CC 

AnnotationCC #
(CC# $
$strCC$ 8
,CC8 9
$strCC: @
)CC@ A
,CCA B
RoleIdDD 
=DD 
tableDD "
.DD" #
ColumnDD# )
<DD) *
stringDD* 0
>DD0 1
(DD1 2
typeDD2 6
:DD6 7
$strDD8 G
,DDG H
nullableDDI Q
:DDQ R
falseDDS X
)DDX Y
,DDY Z
	ClaimTypeEE 
=EE 
tableEE  %
.EE% &
ColumnEE& ,
<EE, -
stringEE- 3
>EE3 4
(EE4 5
typeEE5 9
:EE9 :
$strEE; J
,EEJ K
nullableEEL T
:EET U
trueEEV Z
)EEZ [
,EE[ \

ClaimValueFF 
=FF  
tableFF! &
.FF& '
ColumnFF' -
<FF- .
stringFF. 4
>FF4 5
(FF5 6
typeFF6 :
:FF: ;
$strFF< K
,FFK L
nullableFFM U
:FFU V
trueFFW [
)FF[ \
}GG 
,GG 
constraintsHH 
:HH 
tableHH "
=>HH# %
{II 
tableJJ 
.JJ 

PrimaryKeyJJ $
(JJ$ %
$strJJ% :
,JJ: ;
xJJ< =
=>JJ> @
xJJA B
.JJB C
IdJJC E
)JJE F
;JJF G
tableKK 
.KK 

ForeignKeyKK $
(KK$ %
nameLL 
:LL 
$strLL F
,LLF G
columnMM 
:MM 
xMM  !
=>MM" $
xMM% &
.MM& '
RoleIdMM' -
,MM- .
principalTableNN &
:NN& '
$strNN( 5
,NN5 6
principalColumnOO '
:OO' (
$strOO) -
,OO- .
onDeletePP  
:PP  !
ReferentialActionPP" 3
.PP3 4
CascadePP4 ;
)PP; <
;PP< =
}QQ 
)QQ 
;QQ 
migrationBuilderSS 
.SS 
CreateTableSS (
(SS( )
nameTT 
:TT 
$strTT (
,TT( )
columnsUU 
:UU 
tableUU 
=>UU !
newUU" %
{VV 
IdWW 
=WW 
tableWW 
.WW 
ColumnWW %
<WW% &
intWW& )
>WW) *
(WW* +
typeWW+ /
:WW/ 0
$strWW1 6
,WW6 7
nullableWW8 @
:WW@ A
falseWWB G
)WWG H
.XX 

AnnotationXX #
(XX# $
$strXX$ 8
,XX8 9
$strXX: @
)XX@ A
,XXA B
UserIdYY 
=YY 
tableYY "
.YY" #
ColumnYY# )
<YY) *
stringYY* 0
>YY0 1
(YY1 2
typeYY2 6
:YY6 7
$strYY8 G
,YYG H
nullableYYI Q
:YYQ R
falseYYS X
)YYX Y
,YYY Z
	ClaimTypeZZ 
=ZZ 
tableZZ  %
.ZZ% &
ColumnZZ& ,
<ZZ, -
stringZZ- 3
>ZZ3 4
(ZZ4 5
typeZZ5 9
:ZZ9 :
$strZZ; J
,ZZJ K
nullableZZL T
:ZZT U
trueZZV Z
)ZZZ [
,ZZ[ \

ClaimValue[[ 
=[[  
table[[! &
.[[& '
Column[[' -
<[[- .
string[[. 4
>[[4 5
([[5 6
type[[6 :
:[[: ;
$str[[< K
,[[K L
nullable[[M U
:[[U V
true[[W [
)[[[ \
}\\ 
,\\ 
constraints]] 
:]] 
table]] "
=>]]# %
{^^ 
table__ 
.__ 

PrimaryKey__ $
(__$ %
$str__% :
,__: ;
x__< =
=>__> @
x__A B
.__B C
Id__C E
)__E F
;__F G
table`` 
.`` 

ForeignKey`` $
(``$ %
nameaa 
:aa 
$straa F
,aaF G
columnbb 
:bb 
xbb  !
=>bb" $
xbb% &
.bb& '
UserIdbb' -
,bb- .
principalTablecc &
:cc& '
$strcc( 5
,cc5 6
principalColumndd '
:dd' (
$strdd) -
,dd- .
onDeleteee  
:ee  !
ReferentialActionee" 3
.ee3 4
Cascadeee4 ;
)ee; <
;ee< =
}ff 
)ff 
;ff 
migrationBuilderhh 
.hh 
CreateTablehh (
(hh( )
nameii 
:ii 
$strii (
,ii( )
columnsjj 
:jj 
tablejj 
=>jj !
newjj" %
{kk 
LoginProviderll !
=ll" #
tablell$ )
.ll) *
Columnll* 0
<ll0 1
stringll1 7
>ll7 8
(ll8 9
typell9 =
:ll= >
$strll? N
,llN O
nullablellP X
:llX Y
falsellZ _
)ll_ `
,ll` a
ProviderKeymm 
=mm  !
tablemm" '
.mm' (
Columnmm( .
<mm. /
stringmm/ 5
>mm5 6
(mm6 7
typemm7 ;
:mm; <
$strmm= L
,mmL M
nullablemmN V
:mmV W
falsemmX ]
)mm] ^
,mm^ _
ProviderDisplayNamenn '
=nn( )
tablenn* /
.nn/ 0
Columnnn0 6
<nn6 7
stringnn7 =
>nn= >
(nn> ?
typenn? C
:nnC D
$strnnE T
,nnT U
nullablennV ^
:nn^ _
truenn` d
)nnd e
,nne f
UserIdoo 
=oo 
tableoo "
.oo" #
Columnoo# )
<oo) *
stringoo* 0
>oo0 1
(oo1 2
typeoo2 6
:oo6 7
$stroo8 G
,ooG H
nullableooI Q
:ooQ R
falseooS X
)ooX Y
}pp 
,pp 
constraintsqq 
:qq 
tableqq "
=>qq# %
{rr 
tabless 
.ss 

PrimaryKeyss $
(ss$ %
$strss% :
,ss: ;
xss< =
=>ss> @
newssA D
{ssE F
xssG H
.ssH I
LoginProviderssI V
,ssV W
xssX Y
.ssY Z
ProviderKeyssZ e
}ssf g
)ssg h
;ssh i
tablett 
.tt 

ForeignKeytt $
(tt$ %
nameuu 
:uu 
$struu F
,uuF G
columnvv 
:vv 
xvv  !
=>vv" $
xvv% &
.vv& '
UserIdvv' -
,vv- .
principalTableww &
:ww& '
$strww( 5
,ww5 6
principalColumnxx '
:xx' (
$strxx) -
,xx- .
onDeleteyy  
:yy  !
ReferentialActionyy" 3
.yy3 4
Cascadeyy4 ;
)yy; <
;yy< =
}zz 
)zz 
;zz 
migrationBuilder|| 
.|| 
CreateTable|| (
(||( )
name}} 
:}} 
$str}} '
,}}' (
columns~~ 
:~~ 
table~~ 
=>~~ !
new~~" %
{ 
UserId
ÄÄ 
=
ÄÄ 
table
ÄÄ "
.
ÄÄ" #
Column
ÄÄ# )
<
ÄÄ) *
string
ÄÄ* 0
>
ÄÄ0 1
(
ÄÄ1 2
type
ÄÄ2 6
:
ÄÄ6 7
$str
ÄÄ8 G
,
ÄÄG H
nullable
ÄÄI Q
:
ÄÄQ R
false
ÄÄS X
)
ÄÄX Y
,
ÄÄY Z
RoleId
ÅÅ 
=
ÅÅ 
table
ÅÅ "
.
ÅÅ" #
Column
ÅÅ# )
<
ÅÅ) *
string
ÅÅ* 0
>
ÅÅ0 1
(
ÅÅ1 2
type
ÅÅ2 6
:
ÅÅ6 7
$str
ÅÅ8 G
,
ÅÅG H
nullable
ÅÅI Q
:
ÅÅQ R
false
ÅÅS X
)
ÅÅX Y
,
ÅÅY Z
	AppUserId
ÇÇ 
=
ÇÇ 
table
ÇÇ  %
.
ÇÇ% &
Column
ÇÇ& ,
<
ÇÇ, -
string
ÇÇ- 3
>
ÇÇ3 4
(
ÇÇ4 5
type
ÇÇ5 9
:
ÇÇ9 :
$str
ÇÇ; J
,
ÇÇJ K
nullable
ÇÇL T
:
ÇÇT U
true
ÇÇV Z
)
ÇÇZ [
}
ÉÉ 
,
ÉÉ 
constraints
ÑÑ 
:
ÑÑ 
table
ÑÑ "
=>
ÑÑ# %
{
ÖÖ 
table
ÜÜ 
.
ÜÜ 

PrimaryKey
ÜÜ $
(
ÜÜ$ %
$str
ÜÜ% 9
,
ÜÜ9 :
x
ÜÜ; <
=>
ÜÜ= ?
new
ÜÜ@ C
{
ÜÜD E
x
ÜÜF G
.
ÜÜG H
UserId
ÜÜH N
,
ÜÜN O
x
ÜÜP Q
.
ÜÜQ R
RoleId
ÜÜR X
}
ÜÜY Z
)
ÜÜZ [
;
ÜÜ[ \
table
áá 
.
áá 

ForeignKey
áá $
(
áá$ %
name
àà 
:
àà 
$str
àà E
,
ààE F
column
ââ 
:
ââ 
x
ââ  !
=>
ââ" $
x
ââ% &
.
ââ& '
RoleId
ââ' -
,
ââ- .
principalTable
ää &
:
ää& '
$str
ää( 5
,
ää5 6
principalColumn
ãã '
:
ãã' (
$str
ãã) -
,
ãã- .
onDelete
åå  
:
åå  !
ReferentialAction
åå" 3
.
åå3 4
Cascade
åå4 ;
)
åå; <
;
åå< =
table
çç 
.
çç 

ForeignKey
çç $
(
çç$ %
name
éé 
:
éé 
$str
éé H
,
ééH I
column
èè 
:
èè 
x
èè  !
=>
èè" $
x
èè% &
.
èè& '
	AppUserId
èè' 0
,
èè0 1
principalTable
êê &
:
êê& '
$str
êê( 5
,
êê5 6
principalColumn
ëë '
:
ëë' (
$str
ëë) -
)
ëë- .
;
ëë. /
table
íí 
.
íí 

ForeignKey
íí $
(
íí$ %
name
ìì 
:
ìì 
$str
ìì E
,
ììE F
column
îî 
:
îî 
x
îî  !
=>
îî" $
x
îî% &
.
îî& '
UserId
îî' -
,
îî- .
principalTable
ïï &
:
ïï& '
$str
ïï( 5
,
ïï5 6
principalColumn
ññ '
:
ññ' (
$str
ññ) -
,
ññ- .
onDelete
óó  
:
óó  !
ReferentialAction
óó" 3
.
óó3 4
Cascade
óó4 ;
)
óó; <
;
óó< =
}
òò 
)
òò 
;
òò 
migrationBuilder
öö 
.
öö 
CreateTable
öö (
(
öö( )
name
õõ 
:
õõ 
$str
õõ (
,
õõ( )
columns
úú 
:
úú 
table
úú 
=>
úú !
new
úú" %
{
ùù 
UserId
ûû 
=
ûû 
table
ûû "
.
ûû" #
Column
ûû# )
<
ûû) *
string
ûû* 0
>
ûû0 1
(
ûû1 2
type
ûû2 6
:
ûû6 7
$str
ûû8 G
,
ûûG H
nullable
ûûI Q
:
ûûQ R
false
ûûS X
)
ûûX Y
,
ûûY Z
LoginProvider
üü !
=
üü" #
table
üü$ )
.
üü) *
Column
üü* 0
<
üü0 1
string
üü1 7
>
üü7 8
(
üü8 9
type
üü9 =
:
üü= >
$str
üü? N
,
üüN O
nullable
üüP X
:
üüX Y
false
üüZ _
)
üü_ `
,
üü` a
Name
†† 
=
†† 
table
††  
.
††  !
Column
††! '
<
††' (
string
††( .
>
††. /
(
††/ 0
type
††0 4
:
††4 5
$str
††6 E
,
††E F
nullable
††G O
:
††O P
false
††Q V
)
††V W
,
††W X
Value
°° 
=
°° 
table
°° !
.
°°! "
Column
°°" (
<
°°( )
string
°°) /
>
°°/ 0
(
°°0 1
type
°°1 5
:
°°5 6
$str
°°7 F
,
°°F G
nullable
°°H P
:
°°P Q
true
°°R V
)
°°V W
}
¢¢ 
,
¢¢ 
constraints
££ 
:
££ 
table
££ "
=>
££# %
{
§§ 
table
•• 
.
•• 

PrimaryKey
•• $
(
••$ %
$str
••% :
,
••: ;
x
••< =
=>
••> @
new
••A D
{
••E F
x
••G H
.
••H I
UserId
••I O
,
••O P
x
••Q R
.
••R S
LoginProvider
••S `
,
••` a
x
••b c
.
••c d
Name
••d h
}
••i j
)
••j k
;
••k l
table
¶¶ 
.
¶¶ 

ForeignKey
¶¶ $
(
¶¶$ %
name
ßß 
:
ßß 
$str
ßß F
,
ßßF G
column
®® 
:
®® 
x
®®  !
=>
®®" $
x
®®% &
.
®®& '
UserId
®®' -
,
®®- .
principalTable
©© &
:
©©& '
$str
©©( 5
,
©©5 6
principalColumn
™™ '
:
™™' (
$str
™™) -
,
™™- .
onDelete
´´  
:
´´  !
ReferentialAction
´´" 3
.
´´3 4
Cascade
´´4 ;
)
´´; <
;
´´< =
}
¨¨ 
)
¨¨ 
;
¨¨ 
migrationBuilder
ÆÆ 
.
ÆÆ 
CreateIndex
ÆÆ (
(
ÆÆ( )
name
ØØ 
:
ØØ 
$str
ØØ 2
,
ØØ2 3
table
∞∞ 
:
∞∞ 
$str
∞∞ )
,
∞∞) *
column
±± 
:
±± 
$str
±±  
)
±±  !
;
±±! "
migrationBuilder
≥≥ 
.
≥≥ 
CreateIndex
≥≥ (
(
≥≥( )
name
¥¥ 
:
¥¥ 
$str
¥¥ %
,
¥¥% &
table
µµ 
:
µµ 
$str
µµ $
,
µµ$ %
column
∂∂ 
:
∂∂ 
$str
∂∂ (
,
∂∂( )
unique
∑∑ 
:
∑∑ 
true
∑∑ 
,
∑∑ 
filter
∏∏ 
:
∏∏ 
$str
∏∏ 6
)
∏∏6 7
;
∏∏7 8
migrationBuilder
∫∫ 
.
∫∫ 
CreateIndex
∫∫ (
(
∫∫( )
name
ªª 
:
ªª 
$str
ªª 2
,
ªª2 3
table
ºº 
:
ºº 
$str
ºº )
,
ºº) *
column
ΩΩ 
:
ΩΩ 
$str
ΩΩ  
)
ΩΩ  !
;
ΩΩ! "
migrationBuilder
øø 
.
øø 
CreateIndex
øø (
(
øø( )
name
¿¿ 
:
¿¿ 
$str
¿¿ 2
,
¿¿2 3
table
¡¡ 
:
¡¡ 
$str
¡¡ )
,
¡¡) *
column
¬¬ 
:
¬¬ 
$str
¬¬  
)
¬¬  !
;
¬¬! "
migrationBuilder
ƒƒ 
.
ƒƒ 
CreateIndex
ƒƒ (
(
ƒƒ( )
name
≈≈ 
:
≈≈ 
$str
≈≈ 4
,
≈≈4 5
table
∆∆ 
:
∆∆ 
$str
∆∆ (
,
∆∆( )
column
«« 
:
«« 
$str
«« #
)
««# $
;
««$ %
migrationBuilder
…… 
.
…… 
CreateIndex
…… (
(
……( )
name
   
:
   
$str
   1
,
  1 2
table
ÀÀ 
:
ÀÀ 
$str
ÀÀ (
,
ÀÀ( )
column
ÃÃ 
:
ÃÃ 
$str
ÃÃ  
)
ÃÃ  !
;
ÃÃ! "
migrationBuilder
ŒŒ 
.
ŒŒ 
CreateIndex
ŒŒ (
(
ŒŒ( )
name
œœ 
:
œœ 
$str
œœ "
,
œœ" #
table
–– 
:
–– 
$str
–– $
,
––$ %
column
—— 
:
—— 
$str
—— )
)
——) *
;
——* +
migrationBuilder
”” 
.
”” 
CreateIndex
”” (
(
””( )
name
‘‘ 
:
‘‘ 
$str
‘‘ %
,
‘‘% &
table
’’ 
:
’’ 
$str
’’ $
,
’’$ %
column
÷÷ 
:
÷÷ 
$str
÷÷ ,
,
÷÷, -
unique
◊◊ 
:
◊◊ 
true
◊◊ 
,
◊◊ 
filter
ÿÿ 
:
ÿÿ 
$str
ÿÿ :
)
ÿÿ: ;
;
ÿÿ; <
}
ŸŸ 	
	protected
‹‹ 
override
‹‹ 
void
‹‹ 
Down
‹‹  $
(
‹‹$ %
MigrationBuilder
‹‹% 5
migrationBuilder
‹‹6 F
)
‹‹F G
{
›› 	
migrationBuilder
ﬁﬁ 
.
ﬁﬁ 
	DropTable
ﬁﬁ &
(
ﬁﬁ& '
name
ﬂﬂ 
:
ﬂﬂ 
$str
ﬂﬂ (
)
ﬂﬂ( )
;
ﬂﬂ) *
migrationBuilder
·· 
.
·· 
	DropTable
·· &
(
··& '
name
‚‚ 
:
‚‚ 
$str
‚‚ (
)
‚‚( )
;
‚‚) *
migrationBuilder
‰‰ 
.
‰‰ 
	DropTable
‰‰ &
(
‰‰& '
name
ÂÂ 
:
ÂÂ 
$str
ÂÂ (
)
ÂÂ( )
;
ÂÂ) *
migrationBuilder
ÁÁ 
.
ÁÁ 
	DropTable
ÁÁ &
(
ÁÁ& '
name
ËË 
:
ËË 
$str
ËË '
)
ËË' (
;
ËË( )
migrationBuilder
ÍÍ 
.
ÍÍ 
	DropTable
ÍÍ &
(
ÍÍ& '
name
ÎÎ 
:
ÎÎ 
$str
ÎÎ (
)
ÎÎ( )
;
ÎÎ) *
migrationBuilder
ÌÌ 
.
ÌÌ 
	DropTable
ÌÌ &
(
ÌÌ& '
name
ÓÓ 
:
ÓÓ 
$str
ÓÓ #
)
ÓÓ# $
;
ÓÓ$ %
migrationBuilder
 
.
 
	DropTable
 &
(
& '
name
ÒÒ 
:
ÒÒ 
$str
ÒÒ #
)
ÒÒ# $
;
ÒÒ$ %
}
ÚÚ 	
}
ÛÛ 
}ÙÙ º
íD:\OneDrive\Dokumenty\Programowanie\EPAM\Repos\Gamestore\Gamestore.IdentityRepository\Migrations\IdentityMigrations\20240718120117_BanTimeAdded.cs
	namespace 	
	Gamestore
 
. 
Identityrepository &
.& '

Migrations' 1
.1 2
IdentityMigrations2 D
{ 
public		 

partial		 
class		 
BanTimeAdded		 %
:		& '
	Migration		( 1
{

 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
	AddColumn &
<& '
DateTime' /
>/ 0
(0 1
name 
: 
$str "
," #
table 
: 
$str $
,$ %
type 
: 
$str !
,! "
nullable 
: 
false 
,  
defaultValue 
: 
new !
DateTime" *
(* +
$num+ ,
,, -
$num. /
,/ 0
$num1 2
,2 3
$num4 5
,5 6
$num7 8
,8 9
$num: ;
,; <
$num= >
,> ?
DateTimeKind@ L
.L M
UnspecifiedM X
)X Y
)Y Z
;Z [
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
migrationBuilder 
. 

DropColumn '
(' (
name 
: 
$str "
," #
table 
: 
$str $
)$ %
;% &
} 	
} 
} ›Ñ
ìD:\OneDrive\Dokumenty\Programowanie\EPAM\Repos\Gamestore\Gamestore.IdentityRepository\Migrations\IdentityMigrations\20240721184626_RoleHierarchy.cs
	namespace 	
	Gamestore
 
. 
Identityrepository &
.& '

Migrations' 1
.1 2
IdentityMigrations2 D
;D E
public 
partial 
class 
RoleHierarchy "
:# $
	Migration% .
{		 
	protected 
override 
void 
Up 
( 
MigrationBuilder /
migrationBuilder0 @
)@ A
{ 
migrationBuilder 
. 
	DropTable "
(" #
name 
: 
$str $
)$ %
;% &
migrationBuilder 
. 
	DropTable "
(" #
name 
: 
$str $
)$ %
;% &
migrationBuilder 
. 
	DropTable "
(" #
name 
: 
$str $
)$ %
;% &
migrationBuilder 
. 
	DropTable "
(" #
name 
: 
$str #
)# $
;$ %
migrationBuilder 
. 
	DropTable "
(" #
name 
: 
$str $
)$ %
;% &
migrationBuilder 
. 
	DropTable "
(" #
name 
: 
$str 
)  
;  !
migrationBuilder 
. 
	DropTable "
(" #
name   
:   
$str   
)    
;    !
migrationBuilder"" 
."" 
CreateTable"" $
(""$ %
name## 
:## 
$str## 
,## 
columns$$ 
:$$ 
table$$ 
=>$$ 
new$$ !
{%% 
Id&& 
=&& 
table&& 
.&& 
Column&& !
<&&! "
int&&" %
>&&% &
(&&& '
type&&' +
:&&+ ,
$str&&- 2
,&&2 3
nullable&&4 <
:&&< =
false&&> C
)&&C D
.'' 

Annotation'' 
(''  
$str''  4
,''4 5
$str''6 <
)''< =
,''= >
RoleId(( 
=(( 
table(( 
.(( 
Column(( %
<((% &
string((& ,
>((, -
(((- .
type((. 2
:((2 3
$str((4 C
,((C D
nullable((E M
:((M N
true((O S
)((S T
,((T U
	ClaimType)) 
=)) 
table)) !
.))! "
Column))" (
<))( )
string))) /
>))/ 0
())0 1
type))1 5
:))5 6
$str))7 F
,))F G
nullable))H P
:))P Q
true))R V
)))V W
,))W X

ClaimValue** 
=** 
table** "
.**" #
Column**# )
<**) *
string*** 0
>**0 1
(**1 2
type**2 6
:**6 7
$str**8 G
,**G H
nullable**I Q
:**Q R
true**S W
)**W X
,**X Y
}++ 
,++ 
constraints,, 
:,, 
table,, 
=>,, !
{-- 
table.. 
... 

PrimaryKey..  
(..  !
$str..! 0
,..0 1
x..2 3
=>..4 6
x..7 8
...8 9
Id..9 ;
)..; <
;..< =
}// 
)// 
;// 
migrationBuilder11 
.11 
CreateTable11 $
(11$ %
name22 
:22 
$str22 
,22 
columns33 
:33 
table33 
=>33 
new33 !
{44 
Id55 
=55 
table55 
.55 
Column55 !
<55! "
string55" (
>55( )
(55) *
type55* .
:55. /
$str550 ?
,55? @
nullable55A I
:55I J
false55K P
)55P Q
,55Q R
ParentRoleId66 
=66 
table66 $
.66$ %
Column66% +
<66+ ,
string66, 2
>662 3
(663 4
type664 8
:668 9
$str66: I
,66I J
nullable66K S
:66S T
true66U Y
)66Y Z
,66Z [
Name77 
=77 
table77 
.77 
Column77 #
<77# $
string77$ *
>77* +
(77+ ,
type77, 0
:770 1
$str772 A
,77A B
nullable77C K
:77K L
true77M Q
)77Q R
,77R S
NormalizedName88 
=88  
table88! &
.88& '
Column88' -
<88- .
string88. 4
>884 5
(885 6
type886 :
:88: ;
$str88< K
,88K L
nullable88M U
:88U V
true88W [
)88[ \
,88\ ]
ConcurrencyStamp99  
=99! "
table99# (
.99( )
Column99) /
<99/ 0
string990 6
>996 7
(997 8
type998 <
:99< =
$str99> M
,99M N
nullable99O W
:99W X
true99Y ]
)99] ^
,99^ _
}:: 
,:: 
constraints;; 
:;; 
table;; 
=>;; !
{<< 
table== 
.== 

PrimaryKey==  
(==  !
$str==! +
,==+ ,
x==- .
=>==/ 1
x==2 3
.==3 4
Id==4 6
)==6 7
;==7 8
table>> 
.>> 

ForeignKey>>  
(>>  !
name?? 
:?? 
$str?? 7
,??7 8
column@@ 
:@@ 
x@@ 
=>@@  
x@@! "
.@@" #
ParentRoleId@@# /
,@@/ 0
principalTableAA "
:AA" #
$strAA$ +
,AA+ ,
principalColumnBB #
:BB# $
$strBB% )
,BB) *
onDeleteCC 
:CC 
ReferentialActionCC /
.CC/ 0
RestrictCC0 8
)CC8 9
;CC9 :
}DD 
)DD 
;DD 
migrationBuilderFF 
.FF 
CreateTableFF $
(FF$ %
nameGG 
:GG 
$strGG 
,GG 
columnsHH 
:HH 
tableHH 
=>HH 
newHH !
{II 
IdJJ 
=JJ 
tableJJ 
.JJ 
ColumnJJ !
<JJ! "
intJJ" %
>JJ% &
(JJ& '
typeJJ' +
:JJ+ ,
$strJJ- 2
,JJ2 3
nullableJJ4 <
:JJ< =
falseJJ> C
)JJC D
.KK 

AnnotationKK 
(KK  
$strKK  4
,KK4 5
$strKK6 <
)KK< =
,KK= >
UserIdLL 
=LL 
tableLL 
.LL 
ColumnLL %
<LL% &
stringLL& ,
>LL, -
(LL- .
typeLL. 2
:LL2 3
$strLL4 C
,LLC D
nullableLLE M
:LLM N
trueLLO S
)LLS T
,LLT U
	ClaimTypeMM 
=MM 
tableMM !
.MM! "
ColumnMM" (
<MM( )
stringMM) /
>MM/ 0
(MM0 1
typeMM1 5
:MM5 6
$strMM7 F
,MMF G
nullableMMH P
:MMP Q
trueMMR V
)MMV W
,MMW X

ClaimValueNN 
=NN 
tableNN "
.NN" #
ColumnNN# )
<NN) *
stringNN* 0
>NN0 1
(NN1 2
typeNN2 6
:NN6 7
$strNN8 G
,NNG H
nullableNNI Q
:NNQ R
trueNNS W
)NNW X
,NNX Y
}OO 
,OO 
constraintsPP 
:PP 
tablePP 
=>PP !
{QQ 
tableRR 
.RR 

PrimaryKeyRR  
(RR  !
$strRR! 0
,RR0 1
xRR2 3
=>RR4 6
xRR7 8
.RR8 9
IdRR9 ;
)RR; <
;RR< =
}SS 
)SS 
;SS 
migrationBuilderUU 
.UU 
CreateTableUU $
(UU$ %
nameVV 
:VV 
$strVV 
,VV 
columnsWW 
:WW 
tableWW 
=>WW 
newWW !
{XX 
LoginProviderYY 
=YY 
tableYY  %
.YY% &
ColumnYY& ,
<YY, -
stringYY- 3
>YY3 4
(YY4 5
typeYY5 9
:YY9 :
$strYY; J
,YYJ K
nullableYYL T
:YYT U
falseYYV [
)YY[ \
,YY\ ]
ProviderKeyZZ 
=ZZ 
tableZZ #
.ZZ# $
ColumnZZ$ *
<ZZ* +
stringZZ+ 1
>ZZ1 2
(ZZ2 3
typeZZ3 7
:ZZ7 8
$strZZ9 H
,ZZH I
nullableZZJ R
:ZZR S
falseZZT Y
)ZZY Z
,ZZZ [
ProviderDisplayName[[ #
=[[$ %
table[[& +
.[[+ ,
Column[[, 2
<[[2 3
string[[3 9
>[[9 :
([[: ;
type[[; ?
:[[? @
$str[[A P
,[[P Q
nullable[[R Z
:[[Z [
true[[\ `
)[[` a
,[[a b
UserId\\ 
=\\ 
table\\ 
.\\ 
Column\\ %
<\\% &
string\\& ,
>\\, -
(\\- .
type\\. 2
:\\2 3
$str\\4 C
,\\C D
nullable\\E M
:\\M N
true\\O S
)\\S T
,\\T U
}]] 
,]] 
constraints^^ 
:^^ 
table^^ 
=>^^ !
{__ 
table`` 
.`` 

PrimaryKey``  
(``  !
$str``! 0
,``0 1
x``2 3
=>``4 6
new``7 :
{``; <
x``= >
.``> ?
LoginProvider``? L
,``L M
x``N O
.``O P
ProviderKey``P [
}``\ ]
)``] ^
;``^ _
}aa 
)aa 
;aa 
migrationBuildercc 
.cc 
CreateTablecc $
(cc$ %
namedd 
:dd 
$strdd 
,dd 
columnsee 
:ee 
tableee 
=>ee 
newee !
{ff 
Idgg 
=gg 
tablegg 
.gg 
Columngg !
<gg! "
stringgg" (
>gg( )
(gg) *
typegg* .
:gg. /
$strgg0 ?
,gg? @
nullableggA I
:ggI J
falseggK P
)ggP Q
,ggQ R

BannedTillhh 
=hh 
tablehh "
.hh" #
Columnhh# )
<hh) *
DateTimehh* 2
>hh2 3
(hh3 4
typehh4 8
:hh8 9
$strhh: E
,hhE F
nullablehhG O
:hhO P
falsehhQ V
)hhV W
,hhW X
UserNameii 
=ii 
tableii  
.ii  !
Columnii! '
<ii' (
stringii( .
>ii. /
(ii/ 0
typeii0 4
:ii4 5
$strii6 E
,iiE F
nullableiiG O
:iiO P
trueiiQ U
)iiU V
,iiV W
NormalizedUserNamejj "
=jj# $
tablejj% *
.jj* +
Columnjj+ 1
<jj1 2
stringjj2 8
>jj8 9
(jj9 :
typejj: >
:jj> ?
$strjj@ O
,jjO P
nullablejjQ Y
:jjY Z
truejj[ _
)jj_ `
,jj` a
Emailkk 
=kk 
tablekk 
.kk 
Columnkk $
<kk$ %
stringkk% +
>kk+ ,
(kk, -
typekk- 1
:kk1 2
$strkk3 B
,kkB C
nullablekkD L
:kkL M
truekkN R
)kkR S
,kkS T
NormalizedEmailll 
=ll  !
tablell" '
.ll' (
Columnll( .
<ll. /
stringll/ 5
>ll5 6
(ll6 7
typell7 ;
:ll; <
$strll= L
,llL M
nullablellN V
:llV W
truellX \
)ll\ ]
,ll] ^
EmailConfirmedmm 
=mm  
tablemm! &
.mm& '
Columnmm' -
<mm- .
boolmm. 2
>mm2 3
(mm3 4
typemm4 8
:mm8 9
$strmm: ?
,mm? @
nullablemmA I
:mmI J
falsemmK P
)mmP Q
,mmQ R
PasswordHashnn 
=nn 
tablenn $
.nn$ %
Columnnn% +
<nn+ ,
stringnn, 2
>nn2 3
(nn3 4
typenn4 8
:nn8 9
$strnn: I
,nnI J
nullablennK S
:nnS T
truennU Y
)nnY Z
,nnZ [
SecurityStampoo 
=oo 
tableoo  %
.oo% &
Columnoo& ,
<oo, -
stringoo- 3
>oo3 4
(oo4 5
typeoo5 9
:oo9 :
$stroo; J
,ooJ K
nullableooL T
:ooT U
trueooV Z
)ooZ [
,oo[ \
ConcurrencyStamppp  
=pp! "
tablepp# (
.pp( )
Columnpp) /
<pp/ 0
stringpp0 6
>pp6 7
(pp7 8
typepp8 <
:pp< =
$strpp> M
,ppM N
nullableppO W
:ppW X
trueppY ]
)pp] ^
,pp^ _
PhoneNumberqq 
=qq 
tableqq #
.qq# $
Columnqq$ *
<qq* +
stringqq+ 1
>qq1 2
(qq2 3
typeqq3 7
:qq7 8
$strqq9 H
,qqH I
nullableqqJ R
:qqR S
trueqqT X
)qqX Y
,qqY Z 
PhoneNumberConfirmedrr $
=rr% &
tablerr' ,
.rr, -
Columnrr- 3
<rr3 4
boolrr4 8
>rr8 9
(rr9 :
typerr: >
:rr> ?
$strrr@ E
,rrE F
nullablerrG O
:rrO P
falserrQ V
)rrV W
,rrW X
TwoFactorEnabledss  
=ss! "
tabless# (
.ss( )
Columnss) /
<ss/ 0
boolss0 4
>ss4 5
(ss5 6
typess6 :
:ss: ;
$strss< A
,ssA B
nullablessC K
:ssK L
falsessM R
)ssR S
,ssS T

LockoutEndtt 
=tt 
tablett "
.tt" #
Columntt# )
<tt) *
DateTimeOffsettt* 8
>tt8 9
(tt9 :
typett: >
:tt> ?
$strtt@ P
,ttP Q
nullablettR Z
:ttZ [
truett\ `
)tt` a
,tta b
LockoutEnableduu 
=uu  
tableuu! &
.uu& '
Columnuu' -
<uu- .
booluu. 2
>uu2 3
(uu3 4
typeuu4 8
:uu8 9
$struu: ?
,uu? @
nullableuuA I
:uuI J
falseuuK P
)uuP Q
,uuQ R
AccessFailedCountvv !
=vv" #
tablevv$ )
.vv) *
Columnvv* 0
<vv0 1
intvv1 4
>vv4 5
(vv5 6
typevv6 :
:vv: ;
$strvv< A
,vvA B
nullablevvC K
:vvK L
falsevvM R
)vvR S
,vvS T
}ww 
,ww 
constraintsxx 
:xx 
tablexx 
=>xx !
{yy 
tablezz 
.zz 

PrimaryKeyzz  
(zz  !
$strzz! +
,zz+ ,
xzz- .
=>zz/ 1
xzz2 3
.zz3 4
Idzz4 6
)zz6 7
;zz7 8
}{{ 
){{ 
;{{ 
migrationBuilder}} 
.}} 
CreateTable}} $
(}}$ %
name~~ 
:~~ 
$str~~ 
,~~ 
columns 
: 
table 
=> 
new !
{
ÄÄ 
UserId
ÅÅ 
=
ÅÅ 
table
ÅÅ 
.
ÅÅ 
Column
ÅÅ %
<
ÅÅ% &
string
ÅÅ& ,
>
ÅÅ, -
(
ÅÅ- .
type
ÅÅ. 2
:
ÅÅ2 3
$str
ÅÅ4 C
,
ÅÅC D
nullable
ÅÅE M
:
ÅÅM N
false
ÅÅO T
)
ÅÅT U
,
ÅÅU V
LoginProvider
ÇÇ 
=
ÇÇ 
table
ÇÇ  %
.
ÇÇ% &
Column
ÇÇ& ,
<
ÇÇ, -
string
ÇÇ- 3
>
ÇÇ3 4
(
ÇÇ4 5
type
ÇÇ5 9
:
ÇÇ9 :
$str
ÇÇ; J
,
ÇÇJ K
nullable
ÇÇL T
:
ÇÇT U
false
ÇÇV [
)
ÇÇ[ \
,
ÇÇ\ ]
Name
ÉÉ 
=
ÉÉ 
table
ÉÉ 
.
ÉÉ 
Column
ÉÉ #
<
ÉÉ# $
string
ÉÉ$ *
>
ÉÉ* +
(
ÉÉ+ ,
type
ÉÉ, 0
:
ÉÉ0 1
$str
ÉÉ2 A
,
ÉÉA B
nullable
ÉÉC K
:
ÉÉK L
false
ÉÉM R
)
ÉÉR S
,
ÉÉS T
Value
ÑÑ 
=
ÑÑ 
table
ÑÑ 
.
ÑÑ 
Column
ÑÑ $
<
ÑÑ$ %
string
ÑÑ% +
>
ÑÑ+ ,
(
ÑÑ, -
type
ÑÑ- 1
:
ÑÑ1 2
$str
ÑÑ3 B
,
ÑÑB C
nullable
ÑÑD L
:
ÑÑL M
true
ÑÑN R
)
ÑÑR S
,
ÑÑS T
}
ÖÖ 
,
ÖÖ 
constraints
ÜÜ 
:
ÜÜ 
table
ÜÜ 
=>
ÜÜ !
{
áá 
table
àà 
.
àà 

PrimaryKey
àà  
(
àà  !
$str
àà! 0
,
àà0 1
x
àà2 3
=>
àà4 6
new
àà7 :
{
àà; <
x
àà= >
.
àà> ?
UserId
àà? E
,
ààE F
x
ààG H
.
ààH I
LoginProvider
ààI V
,
ààV W
x
ààX Y
.
ààY Z
Name
ààZ ^
}
àà_ `
)
àà` a
;
ààa b
}
ââ 
)
ââ 
;
ââ 
migrationBuilder
ãã 
.
ãã 
CreateTable
ãã $
(
ãã$ %
name
åå 
:
åå 
$str
åå 
,
åå 
columns
çç 
:
çç 
table
çç 
=>
çç 
new
çç !
{
éé 
UserId
èè 
=
èè 
table
èè 
.
èè 
Column
èè %
<
èè% &
string
èè& ,
>
èè, -
(
èè- .
type
èè. 2
:
èè2 3
$str
èè4 C
,
èèC D
nullable
èèE M
:
èèM N
false
èèO T
)
èèT U
,
èèU V
RoleId
êê 
=
êê 
table
êê 
.
êê 
Column
êê %
<
êê% &
string
êê& ,
>
êê, -
(
êê- .
type
êê. 2
:
êê2 3
$str
êê4 C
,
êêC D
nullable
êêE M
:
êêM N
false
êêO T
)
êêT U
,
êêU V
	AppUserId
ëë 
=
ëë 
table
ëë !
.
ëë! "
Column
ëë" (
<
ëë( )
string
ëë) /
>
ëë/ 0
(
ëë0 1
type
ëë1 5
:
ëë5 6
$str
ëë7 F
,
ëëF G
nullable
ëëH P
:
ëëP Q
true
ëëR V
)
ëëV W
,
ëëW X
}
íí 
,
íí 
constraints
ìì 
:
ìì 
table
ìì 
=>
ìì !
{
îî 
table
ïï 
.
ïï 

PrimaryKey
ïï  
(
ïï  !
$str
ïï! /
,
ïï/ 0
x
ïï1 2
=>
ïï3 5
new
ïï6 9
{
ïï: ;
x
ïï< =
.
ïï= >
UserId
ïï> D
,
ïïD E
x
ïïF G
.
ïïG H
RoleId
ïïH N
}
ïïO P
)
ïïP Q
;
ïïQ R
table
ññ 
.
ññ 

ForeignKey
ññ  
(
ññ  !
name
óó 
:
óó 
$str
óó 8
,
óó8 9
column
òò 
:
òò 
x
òò 
=>
òò  
x
òò! "
.
òò" #
	AppUserId
òò# ,
,
òò, -
principalTable
ôô "
:
ôô" #
$str
ôô$ +
,
ôô+ ,
principalColumn
öö #
:
öö# $
$str
öö% )
)
öö) *
;
öö* +
}
õõ 
)
õõ 
;
õõ 
migrationBuilder
ùù 
.
ùù 
CreateIndex
ùù $
(
ùù$ %
name
ûû 
:
ûû 
$str
ûû )
,
ûû) *
table
üü 
:
üü 
$str
üü 
,
üü 
column
†† 
:
†† 
$str
†† "
)
††" #
;
††# $
migrationBuilder
¢¢ 
.
¢¢ 
CreateIndex
¢¢ $
(
¢¢$ %
name
££ 
:
££ 
$str
££ *
,
££* +
table
§§ 
:
§§ 
$str
§§ 
,
§§ 
column
•• 
:
•• 
$str
•• 
)
••  
;
••  !
}
¶¶ 
	protected
©© 
override
©© 
void
©© 
Down
©©  
(
©©  !
MigrationBuilder
©©! 1
migrationBuilder
©©2 B
)
©©B C
{
™™ 
migrationBuilder
´´ 
.
´´ 
	DropTable
´´ "
(
´´" #
name
¨¨ 
:
¨¨ 
$str
¨¨ 
)
¨¨ 
;
¨¨  
migrationBuilder
ÆÆ 
.
ÆÆ 
	DropTable
ÆÆ "
(
ÆÆ" #
name
ØØ 
:
ØØ 
$str
ØØ 
)
ØØ 
;
ØØ 
migrationBuilder
±± 
.
±± 
	DropTable
±± "
(
±±" #
name
≤≤ 
:
≤≤ 
$str
≤≤ 
)
≤≤ 
;
≤≤  
migrationBuilder
¥¥ 
.
¥¥ 
	DropTable
¥¥ "
(
¥¥" #
name
µµ 
:
µµ 
$str
µµ 
)
µµ 
;
µµ  
migrationBuilder
∑∑ 
.
∑∑ 
	DropTable
∑∑ "
(
∑∑" #
name
∏∏ 
:
∏∏ 
$str
∏∏ 
)
∏∏ 
;
∏∏ 
migrationBuilder
∫∫ 
.
∫∫ 
	DropTable
∫∫ "
(
∫∫" #
name
ªª 
:
ªª 
$str
ªª 
)
ªª 
;
ªª  
migrationBuilder
ΩΩ 
.
ΩΩ 
	DropTable
ΩΩ "
(
ΩΩ" #
name
ææ 
:
ææ 
$str
ææ 
)
ææ 
;
ææ 
migrationBuilder
¿¿ 
.
¿¿ 
CreateTable
¿¿ $
(
¿¿$ %
name
¡¡ 
:
¡¡ 
$str
¡¡ 
,
¡¡  
columns
¬¬ 
:
¬¬ 
table
¬¬ 
=>
¬¬ 
new
¬¬ !
{
√√ 
Id
ƒƒ 
=
ƒƒ 
table
ƒƒ 
.
ƒƒ 
Column
ƒƒ !
<
ƒƒ! "
string
ƒƒ" (
>
ƒƒ( )
(
ƒƒ) *
type
ƒƒ* .
:
ƒƒ. /
$str
ƒƒ0 ?
,
ƒƒ? @
nullable
ƒƒA I
:
ƒƒI J
false
ƒƒK P
)
ƒƒP Q
,
ƒƒQ R
ConcurrencyStamp
≈≈  
=
≈≈! "
table
≈≈# (
.
≈≈( )
Column
≈≈) /
<
≈≈/ 0
string
≈≈0 6
>
≈≈6 7
(
≈≈7 8
type
≈≈8 <
:
≈≈< =
$str
≈≈> M
,
≈≈M N
nullable
≈≈O W
:
≈≈W X
true
≈≈Y ]
)
≈≈] ^
,
≈≈^ _
Name
∆∆ 
=
∆∆ 
table
∆∆ 
.
∆∆ 
Column
∆∆ #
<
∆∆# $
string
∆∆$ *
>
∆∆* +
(
∆∆+ ,
type
∆∆, 0
:
∆∆0 1
$str
∆∆2 A
,
∆∆A B
	maxLength
∆∆C L
:
∆∆L M
$num
∆∆N Q
,
∆∆Q R
nullable
∆∆S [
:
∆∆[ \
true
∆∆] a
)
∆∆a b
,
∆∆b c
NormalizedName
«« 
=
««  
table
««! &
.
««& '
Column
««' -
<
««- .
string
««. 4
>
««4 5
(
««5 6
type
««6 :
:
««: ;
$str
««< K
,
««K L
	maxLength
««M V
:
««V W
$num
««X [
,
««[ \
nullable
««] e
:
««e f
true
««g k
)
««k l
,
««l m
}
»» 
,
»» 
constraints
…… 
:
…… 
table
…… 
=>
…… !
{
   
table
ÀÀ 
.
ÀÀ 

PrimaryKey
ÀÀ  
(
ÀÀ  !
$str
ÀÀ! 1
,
ÀÀ1 2
x
ÀÀ3 4
=>
ÀÀ5 7
x
ÀÀ8 9
.
ÀÀ9 :
Id
ÀÀ: <
)
ÀÀ< =
;
ÀÀ= >
}
ÃÃ 
)
ÃÃ 
;
ÃÃ 
migrationBuilder
ŒŒ 
.
ŒŒ 
CreateTable
ŒŒ $
(
ŒŒ$ %
name
œœ 
:
œœ 
$str
œœ 
,
œœ  
columns
–– 
:
–– 
table
–– 
=>
–– 
new
–– !
{
—— 
Id
““ 
=
““ 
table
““ 
.
““ 
Column
““ !
<
““! "
string
““" (
>
““( )
(
““) *
type
““* .
:
““. /
$str
““0 ?
,
““? @
nullable
““A I
:
““I J
false
““K P
)
““P Q
,
““Q R
AccessFailedCount
”” !
=
””" #
table
””$ )
.
””) *
Column
””* 0
<
””0 1
int
””1 4
>
””4 5
(
””5 6
type
””6 :
:
””: ;
$str
””< A
,
””A B
nullable
””C K
:
””K L
false
””M R
)
””R S
,
””S T

BannedTill
‘‘ 
=
‘‘ 
table
‘‘ "
.
‘‘" #
Column
‘‘# )
<
‘‘) *
DateTime
‘‘* 2
>
‘‘2 3
(
‘‘3 4
type
‘‘4 8
:
‘‘8 9
$str
‘‘: E
,
‘‘E F
nullable
‘‘G O
:
‘‘O P
false
‘‘Q V
)
‘‘V W
,
‘‘W X
ConcurrencyStamp
’’  
=
’’! "
table
’’# (
.
’’( )
Column
’’) /
<
’’/ 0
string
’’0 6
>
’’6 7
(
’’7 8
type
’’8 <
:
’’< =
$str
’’> M
,
’’M N
nullable
’’O W
:
’’W X
true
’’Y ]
)
’’] ^
,
’’^ _
Email
÷÷ 
=
÷÷ 
table
÷÷ 
.
÷÷ 
Column
÷÷ $
<
÷÷$ %
string
÷÷% +
>
÷÷+ ,
(
÷÷, -
type
÷÷- 1
:
÷÷1 2
$str
÷÷3 B
,
÷÷B C
	maxLength
÷÷D M
:
÷÷M N
$num
÷÷O R
,
÷÷R S
nullable
÷÷T \
:
÷÷\ ]
true
÷÷^ b
)
÷÷b c
,
÷÷c d
EmailConfirmed
◊◊ 
=
◊◊  
table
◊◊! &
.
◊◊& '
Column
◊◊' -
<
◊◊- .
bool
◊◊. 2
>
◊◊2 3
(
◊◊3 4
type
◊◊4 8
:
◊◊8 9
$str
◊◊: ?
,
◊◊? @
nullable
◊◊A I
:
◊◊I J
false
◊◊K P
)
◊◊P Q
,
◊◊Q R
LockoutEnabled
ÿÿ 
=
ÿÿ  
table
ÿÿ! &
.
ÿÿ& '
Column
ÿÿ' -
<
ÿÿ- .
bool
ÿÿ. 2
>
ÿÿ2 3
(
ÿÿ3 4
type
ÿÿ4 8
:
ÿÿ8 9
$str
ÿÿ: ?
,
ÿÿ? @
nullable
ÿÿA I
:
ÿÿI J
false
ÿÿK P
)
ÿÿP Q
,
ÿÿQ R

LockoutEnd
ŸŸ 
=
ŸŸ 
table
ŸŸ "
.
ŸŸ" #
Column
ŸŸ# )
<
ŸŸ) *
DateTimeOffset
ŸŸ* 8
>
ŸŸ8 9
(
ŸŸ9 :
type
ŸŸ: >
:
ŸŸ> ?
$str
ŸŸ@ P
,
ŸŸP Q
nullable
ŸŸR Z
:
ŸŸZ [
true
ŸŸ\ `
)
ŸŸ` a
,
ŸŸa b
NormalizedEmail
⁄⁄ 
=
⁄⁄  !
table
⁄⁄" '
.
⁄⁄' (
Column
⁄⁄( .
<
⁄⁄. /
string
⁄⁄/ 5
>
⁄⁄5 6
(
⁄⁄6 7
type
⁄⁄7 ;
:
⁄⁄; <
$str
⁄⁄= L
,
⁄⁄L M
	maxLength
⁄⁄N W
:
⁄⁄W X
$num
⁄⁄Y \
,
⁄⁄\ ]
nullable
⁄⁄^ f
:
⁄⁄f g
true
⁄⁄h l
)
⁄⁄l m
,
⁄⁄m n 
NormalizedUserName
€€ "
=
€€# $
table
€€% *
.
€€* +
Column
€€+ 1
<
€€1 2
string
€€2 8
>
€€8 9
(
€€9 :
type
€€: >
:
€€> ?
$str
€€@ O
,
€€O P
	maxLength
€€Q Z
:
€€Z [
$num
€€\ _
,
€€_ `
nullable
€€a i
:
€€i j
true
€€k o
)
€€o p
,
€€p q
PasswordHash
‹‹ 
=
‹‹ 
table
‹‹ $
.
‹‹$ %
Column
‹‹% +
<
‹‹+ ,
string
‹‹, 2
>
‹‹2 3
(
‹‹3 4
type
‹‹4 8
:
‹‹8 9
$str
‹‹: I
,
‹‹I J
nullable
‹‹K S
:
‹‹S T
true
‹‹U Y
)
‹‹Y Z
,
‹‹Z [
PhoneNumber
›› 
=
›› 
table
›› #
.
››# $
Column
››$ *
<
››* +
string
››+ 1
>
››1 2
(
››2 3
type
››3 7
:
››7 8
$str
››9 H
,
››H I
nullable
››J R
:
››R S
true
››T X
)
››X Y
,
››Y Z"
PhoneNumberConfirmed
ﬁﬁ $
=
ﬁﬁ% &
table
ﬁﬁ' ,
.
ﬁﬁ, -
Column
ﬁﬁ- 3
<
ﬁﬁ3 4
bool
ﬁﬁ4 8
>
ﬁﬁ8 9
(
ﬁﬁ9 :
type
ﬁﬁ: >
:
ﬁﬁ> ?
$str
ﬁﬁ@ E
,
ﬁﬁE F
nullable
ﬁﬁG O
:
ﬁﬁO P
false
ﬁﬁQ V
)
ﬁﬁV W
,
ﬁﬁW X
SecurityStamp
ﬂﬂ 
=
ﬂﬂ 
table
ﬂﬂ  %
.
ﬂﬂ% &
Column
ﬂﬂ& ,
<
ﬂﬂ, -
string
ﬂﬂ- 3
>
ﬂﬂ3 4
(
ﬂﬂ4 5
type
ﬂﬂ5 9
:
ﬂﬂ9 :
$str
ﬂﬂ; J
,
ﬂﬂJ K
nullable
ﬂﬂL T
:
ﬂﬂT U
true
ﬂﬂV Z
)
ﬂﬂZ [
,
ﬂﬂ[ \
TwoFactorEnabled
‡‡  
=
‡‡! "
table
‡‡# (
.
‡‡( )
Column
‡‡) /
<
‡‡/ 0
bool
‡‡0 4
>
‡‡4 5
(
‡‡5 6
type
‡‡6 :
:
‡‡: ;
$str
‡‡< A
,
‡‡A B
nullable
‡‡C K
:
‡‡K L
false
‡‡M R
)
‡‡R S
,
‡‡S T
UserName
·· 
=
·· 
table
··  
.
··  !
Column
··! '
<
··' (
string
··( .
>
··. /
(
··/ 0
type
··0 4
:
··4 5
$str
··6 E
,
··E F
	maxLength
··G P
:
··P Q
$num
··R U
,
··U V
nullable
··W _
:
··_ `
true
··a e
)
··e f
,
··f g
}
‚‚ 
,
‚‚ 
constraints
„„ 
:
„„ 
table
„„ 
=>
„„ !
{
‰‰ 
table
ÂÂ 
.
ÂÂ 

PrimaryKey
ÂÂ  
(
ÂÂ  !
$str
ÂÂ! 1
,
ÂÂ1 2
x
ÂÂ3 4
=>
ÂÂ5 7
x
ÂÂ8 9
.
ÂÂ9 :
Id
ÂÂ: <
)
ÂÂ< =
;
ÂÂ= >
}
ÊÊ 
)
ÊÊ 
;
ÊÊ 
migrationBuilder
ËË 
.
ËË 
CreateTable
ËË $
(
ËË$ %
name
ÈÈ 
:
ÈÈ 
$str
ÈÈ $
,
ÈÈ$ %
columns
ÍÍ 
:
ÍÍ 
table
ÍÍ 
=>
ÍÍ 
new
ÍÍ !
{
ÎÎ 
Id
ÏÏ 
=
ÏÏ 
table
ÏÏ 
.
ÏÏ 
Column
ÏÏ !
<
ÏÏ! "
int
ÏÏ" %
>
ÏÏ% &
(
ÏÏ& '
type
ÏÏ' +
:
ÏÏ+ ,
$str
ÏÏ- 2
,
ÏÏ2 3
nullable
ÏÏ4 <
:
ÏÏ< =
false
ÏÏ> C
)
ÏÏC D
.
ÌÌ 

Annotation
ÌÌ 
(
ÌÌ  
$str
ÌÌ  4
,
ÌÌ4 5
$str
ÌÌ6 <
)
ÌÌ< =
,
ÌÌ= >
	ClaimType
ÓÓ 
=
ÓÓ 
table
ÓÓ !
.
ÓÓ! "
Column
ÓÓ" (
<
ÓÓ( )
string
ÓÓ) /
>
ÓÓ/ 0
(
ÓÓ0 1
type
ÓÓ1 5
:
ÓÓ5 6
$str
ÓÓ7 F
,
ÓÓF G
nullable
ÓÓH P
:
ÓÓP Q
true
ÓÓR V
)
ÓÓV W
,
ÓÓW X

ClaimValue
ÔÔ 
=
ÔÔ 
table
ÔÔ "
.
ÔÔ" #
Column
ÔÔ# )
<
ÔÔ) *
string
ÔÔ* 0
>
ÔÔ0 1
(
ÔÔ1 2
type
ÔÔ2 6
:
ÔÔ6 7
$str
ÔÔ8 G
,
ÔÔG H
nullable
ÔÔI Q
:
ÔÔQ R
true
ÔÔS W
)
ÔÔW X
,
ÔÔX Y
RoleId
 
=
 
table
 
.
 
Column
 %
<
% &
string
& ,
>
, -
(
- .
type
. 2
:
2 3
$str
4 C
,
C D
nullable
E M
:
M N
false
O T
)
T U
,
U V
}
ÒÒ 
,
ÒÒ 
constraints
ÚÚ 
:
ÚÚ 
table
ÚÚ 
=>
ÚÚ !
{
ÛÛ 
table
ÙÙ 
.
ÙÙ 

PrimaryKey
ÙÙ  
(
ÙÙ  !
$str
ÙÙ! 6
,
ÙÙ6 7
x
ÙÙ8 9
=>
ÙÙ: <
x
ÙÙ= >
.
ÙÙ> ?
Id
ÙÙ? A
)
ÙÙA B
;
ÙÙB C
table
ıı 
.
ıı 

ForeignKey
ıı  
(
ıı  !
name
ˆˆ 
:
ˆˆ 
$str
ˆˆ B
,
ˆˆB C
column
˜˜ 
:
˜˜ 
x
˜˜ 
=>
˜˜  
x
˜˜! "
.
˜˜" #
RoleId
˜˜# )
,
˜˜) *
principalTable
¯¯ "
:
¯¯" #
$str
¯¯$ 1
,
¯¯1 2
principalColumn
˘˘ #
:
˘˘# $
$str
˘˘% )
,
˘˘) *
onDelete
˙˙ 
:
˙˙ 
ReferentialAction
˙˙ /
.
˙˙/ 0
Cascade
˙˙0 7
)
˙˙7 8
;
˙˙8 9
}
˚˚ 
)
˚˚ 
;
˚˚ 
migrationBuilder
˝˝ 
.
˝˝ 
CreateTable
˝˝ $
(
˝˝$ %
name
˛˛ 
:
˛˛ 
$str
˛˛ $
,
˛˛$ %
columns
ˇˇ 
:
ˇˇ 
table
ˇˇ 
=>
ˇˇ 
new
ˇˇ !
{
ÄÄ 
Id
ÅÅ 
=
ÅÅ 
table
ÅÅ 
.
ÅÅ 
Column
ÅÅ !
<
ÅÅ! "
int
ÅÅ" %
>
ÅÅ% &
(
ÅÅ& '
type
ÅÅ' +
:
ÅÅ+ ,
$str
ÅÅ- 2
,
ÅÅ2 3
nullable
ÅÅ4 <
:
ÅÅ< =
false
ÅÅ> C
)
ÅÅC D
.
ÇÇ 

Annotation
ÇÇ 
(
ÇÇ  
$str
ÇÇ  4
,
ÇÇ4 5
$str
ÇÇ6 <
)
ÇÇ< =
,
ÇÇ= >
	ClaimType
ÉÉ 
=
ÉÉ 
table
ÉÉ !
.
ÉÉ! "
Column
ÉÉ" (
<
ÉÉ( )
string
ÉÉ) /
>
ÉÉ/ 0
(
ÉÉ0 1
type
ÉÉ1 5
:
ÉÉ5 6
$str
ÉÉ7 F
,
ÉÉF G
nullable
ÉÉH P
:
ÉÉP Q
true
ÉÉR V
)
ÉÉV W
,
ÉÉW X

ClaimValue
ÑÑ 
=
ÑÑ 
table
ÑÑ "
.
ÑÑ" #
Column
ÑÑ# )
<
ÑÑ) *
string
ÑÑ* 0
>
ÑÑ0 1
(
ÑÑ1 2
type
ÑÑ2 6
:
ÑÑ6 7
$str
ÑÑ8 G
,
ÑÑG H
nullable
ÑÑI Q
:
ÑÑQ R
true
ÑÑS W
)
ÑÑW X
,
ÑÑX Y
UserId
ÖÖ 
=
ÖÖ 
table
ÖÖ 
.
ÖÖ 
Column
ÖÖ %
<
ÖÖ% &
string
ÖÖ& ,
>
ÖÖ, -
(
ÖÖ- .
type
ÖÖ. 2
:
ÖÖ2 3
$str
ÖÖ4 C
,
ÖÖC D
nullable
ÖÖE M
:
ÖÖM N
false
ÖÖO T
)
ÖÖT U
,
ÖÖU V
}
ÜÜ 
,
ÜÜ 
constraints
áá 
:
áá 
table
áá 
=>
áá !
{
àà 
table
ââ 
.
ââ 

PrimaryKey
ââ  
(
ââ  !
$str
ââ! 6
,
ââ6 7
x
ââ8 9
=>
ââ: <
x
ââ= >
.
ââ> ?
Id
ââ? A
)
ââA B
;
ââB C
table
ää 
.
ää 

ForeignKey
ää  
(
ää  !
name
ãã 
:
ãã 
$str
ãã B
,
ããB C
column
åå 
:
åå 
x
åå 
=>
åå  
x
åå! "
.
åå" #
UserId
åå# )
,
åå) *
principalTable
çç "
:
çç" #
$str
çç$ 1
,
çç1 2
principalColumn
éé #
:
éé# $
$str
éé% )
,
éé) *
onDelete
èè 
:
èè 
ReferentialAction
èè /
.
èè/ 0
Cascade
èè0 7
)
èè7 8
;
èè8 9
}
êê 
)
êê 
;
êê 
migrationBuilder
íí 
.
íí 
CreateTable
íí $
(
íí$ %
name
ìì 
:
ìì 
$str
ìì $
,
ìì$ %
columns
îî 
:
îî 
table
îî 
=>
îî 
new
îî !
{
ïï 
LoginProvider
ññ 
=
ññ 
table
ññ  %
.
ññ% &
Column
ññ& ,
<
ññ, -
string
ññ- 3
>
ññ3 4
(
ññ4 5
type
ññ5 9
:
ññ9 :
$str
ññ; J
,
ññJ K
nullable
ññL T
:
ññT U
false
ññV [
)
ññ[ \
,
ññ\ ]
ProviderKey
óó 
=
óó 
table
óó #
.
óó# $
Column
óó$ *
<
óó* +
string
óó+ 1
>
óó1 2
(
óó2 3
type
óó3 7
:
óó7 8
$str
óó9 H
,
óóH I
nullable
óóJ R
:
óóR S
false
óóT Y
)
óóY Z
,
óóZ [!
ProviderDisplayName
òò #
=
òò$ %
table
òò& +
.
òò+ ,
Column
òò, 2
<
òò2 3
string
òò3 9
>
òò9 :
(
òò: ;
type
òò; ?
:
òò? @
$str
òòA P
,
òòP Q
nullable
òòR Z
:
òòZ [
true
òò\ `
)
òò` a
,
òòa b
UserId
ôô 
=
ôô 
table
ôô 
.
ôô 
Column
ôô %
<
ôô% &
string
ôô& ,
>
ôô, -
(
ôô- .
type
ôô. 2
:
ôô2 3
$str
ôô4 C
,
ôôC D
nullable
ôôE M
:
ôôM N
false
ôôO T
)
ôôT U
,
ôôU V
}
öö 
,
öö 
constraints
õõ 
:
õõ 
table
õõ 
=>
õõ !
{
úú 
table
ùù 
.
ùù 

PrimaryKey
ùù  
(
ùù  !
$str
ùù! 6
,
ùù6 7
x
ùù8 9
=>
ùù: <
new
ùù= @
{
ùùA B
x
ùùC D
.
ùùD E
LoginProvider
ùùE R
,
ùùR S
x
ùùT U
.
ùùU V
ProviderKey
ùùV a
}
ùùb c
)
ùùc d
;
ùùd e
table
ûû 
.
ûû 

ForeignKey
ûû  
(
ûû  !
name
üü 
:
üü 
$str
üü B
,
üüB C
column
†† 
:
†† 
x
†† 
=>
††  
x
††! "
.
††" #
UserId
††# )
,
††) *
principalTable
°° "
:
°°" #
$str
°°$ 1
,
°°1 2
principalColumn
¢¢ #
:
¢¢# $
$str
¢¢% )
,
¢¢) *
onDelete
££ 
:
££ 
ReferentialAction
££ /
.
££/ 0
Cascade
££0 7
)
££7 8
;
££8 9
}
§§ 
)
§§ 
;
§§ 
migrationBuilder
¶¶ 
.
¶¶ 
CreateTable
¶¶ $
(
¶¶$ %
name
ßß 
:
ßß 
$str
ßß #
,
ßß# $
columns
®® 
:
®® 
table
®® 
=>
®® 
new
®® !
{
©© 
UserId
™™ 
=
™™ 
table
™™ 
.
™™ 
Column
™™ %
<
™™% &
string
™™& ,
>
™™, -
(
™™- .
type
™™. 2
:
™™2 3
$str
™™4 C
,
™™C D
nullable
™™E M
:
™™M N
false
™™O T
)
™™T U
,
™™U V
RoleId
´´ 
=
´´ 
table
´´ 
.
´´ 
Column
´´ %
<
´´% &
string
´´& ,
>
´´, -
(
´´- .
type
´´. 2
:
´´2 3
$str
´´4 C
,
´´C D
nullable
´´E M
:
´´M N
false
´´O T
)
´´T U
,
´´U V
	AppUserId
¨¨ 
=
¨¨ 
table
¨¨ !
.
¨¨! "
Column
¨¨" (
<
¨¨( )
string
¨¨) /
>
¨¨/ 0
(
¨¨0 1
type
¨¨1 5
:
¨¨5 6
$str
¨¨7 F
,
¨¨F G
nullable
¨¨H P
:
¨¨P Q
true
¨¨R V
)
¨¨V W
,
¨¨W X
}
≠≠ 
,
≠≠ 
constraints
ÆÆ 
:
ÆÆ 
table
ÆÆ 
=>
ÆÆ !
{
ØØ 
table
∞∞ 
.
∞∞ 

PrimaryKey
∞∞  
(
∞∞  !
$str
∞∞! 5
,
∞∞5 6
x
∞∞7 8
=>
∞∞9 ;
new
∞∞< ?
{
∞∞@ A
x
∞∞B C
.
∞∞C D
UserId
∞∞D J
,
∞∞J K
x
∞∞L M
.
∞∞M N
RoleId
∞∞N T
}
∞∞U V
)
∞∞V W
;
∞∞W X
table
±± 
.
±± 

ForeignKey
±±  
(
±±  !
name
≤≤ 
:
≤≤ 
$str
≤≤ A
,
≤≤A B
column
≥≥ 
:
≥≥ 
x
≥≥ 
=>
≥≥  
x
≥≥! "
.
≥≥" #
RoleId
≥≥# )
,
≥≥) *
principalTable
¥¥ "
:
¥¥" #
$str
¥¥$ 1
,
¥¥1 2
principalColumn
µµ #
:
µµ# $
$str
µµ% )
,
µµ) *
onDelete
∂∂ 
:
∂∂ 
ReferentialAction
∂∂ /
.
∂∂/ 0
Cascade
∂∂0 7
)
∂∂7 8
;
∂∂8 9
table
∑∑ 
.
∑∑ 

ForeignKey
∑∑  
(
∑∑  !
name
∏∏ 
:
∏∏ 
$str
∏∏ D
,
∏∏D E
column
ππ 
:
ππ 
x
ππ 
=>
ππ  
x
ππ! "
.
ππ" #
	AppUserId
ππ# ,
,
ππ, -
principalTable
∫∫ "
:
∫∫" #
$str
∫∫$ 1
,
∫∫1 2
principalColumn
ªª #
:
ªª# $
$str
ªª% )
)
ªª) *
;
ªª* +
table
ºº 
.
ºº 

ForeignKey
ºº  
(
ºº  !
name
ΩΩ 
:
ΩΩ 
$str
ΩΩ A
,
ΩΩA B
column
ææ 
:
ææ 
x
ææ 
=>
ææ  
x
ææ! "
.
ææ" #
UserId
ææ# )
,
ææ) *
principalTable
øø "
:
øø" #
$str
øø$ 1
,
øø1 2
principalColumn
¿¿ #
:
¿¿# $
$str
¿¿% )
,
¿¿) *
onDelete
¡¡ 
:
¡¡ 
ReferentialAction
¡¡ /
.
¡¡/ 0
Cascade
¡¡0 7
)
¡¡7 8
;
¡¡8 9
}
¬¬ 
)
¬¬ 
;
¬¬ 
migrationBuilder
ƒƒ 
.
ƒƒ 
CreateTable
ƒƒ $
(
ƒƒ$ %
name
≈≈ 
:
≈≈ 
$str
≈≈ $
,
≈≈$ %
columns
∆∆ 
:
∆∆ 
table
∆∆ 
=>
∆∆ 
new
∆∆ !
{
«« 
UserId
»» 
=
»» 
table
»» 
.
»» 
Column
»» %
<
»»% &
string
»»& ,
>
»», -
(
»»- .
type
»». 2
:
»»2 3
$str
»»4 C
,
»»C D
nullable
»»E M
:
»»M N
false
»»O T
)
»»T U
,
»»U V
LoginProvider
…… 
=
…… 
table
……  %
.
……% &
Column
……& ,
<
……, -
string
……- 3
>
……3 4
(
……4 5
type
……5 9
:
……9 :
$str
……; J
,
……J K
nullable
……L T
:
……T U
false
……V [
)
……[ \
,
……\ ]
Name
   
=
   
table
   
.
   
Column
   #
<
  # $
string
  $ *
>
  * +
(
  + ,
type
  , 0
:
  0 1
$str
  2 A
,
  A B
nullable
  C K
:
  K L
false
  M R
)
  R S
,
  S T
Value
ÀÀ 
=
ÀÀ 
table
ÀÀ 
.
ÀÀ 
Column
ÀÀ $
<
ÀÀ$ %
string
ÀÀ% +
>
ÀÀ+ ,
(
ÀÀ, -
type
ÀÀ- 1
:
ÀÀ1 2
$str
ÀÀ3 B
,
ÀÀB C
nullable
ÀÀD L
:
ÀÀL M
true
ÀÀN R
)
ÀÀR S
,
ÀÀS T
}
ÃÃ 
,
ÃÃ 
constraints
ÕÕ 
:
ÕÕ 
table
ÕÕ 
=>
ÕÕ !
{
ŒŒ 
table
œœ 
.
œœ 

PrimaryKey
œœ  
(
œœ  !
$str
œœ! 6
,
œœ6 7
x
œœ8 9
=>
œœ: <
new
œœ= @
{
œœA B
x
œœC D
.
œœD E
UserId
œœE K
,
œœK L
x
œœM N
.
œœN O
LoginProvider
œœO \
,
œœ\ ]
x
œœ^ _
.
œœ_ `
Name
œœ` d
}
œœe f
)
œœf g
;
œœg h
table
–– 
.
–– 

ForeignKey
––  
(
––  !
name
—— 
:
—— 
$str
—— B
,
——B C
column
““ 
:
““ 
x
““ 
=>
““  
x
““! "
.
““" #
UserId
““# )
,
““) *
principalTable
”” "
:
””" #
$str
””$ 1
,
””1 2
principalColumn
‘‘ #
:
‘‘# $
$str
‘‘% )
,
‘‘) *
onDelete
’’ 
:
’’ 
ReferentialAction
’’ /
.
’’/ 0
Cascade
’’0 7
)
’’7 8
;
’’8 9
}
÷÷ 
)
÷÷ 
;
÷÷ 
migrationBuilder
ÿÿ 
.
ÿÿ 
CreateIndex
ÿÿ $
(
ÿÿ$ %
name
ŸŸ 
:
ŸŸ 
$str
ŸŸ .
,
ŸŸ. /
table
⁄⁄ 
:
⁄⁄ 
$str
⁄⁄ %
,
⁄⁄% &
column
€€ 
:
€€ 
$str
€€ 
)
€€ 
;
€€ 
migrationBuilder
›› 
.
›› 
CreateIndex
›› $
(
››$ %
name
ﬁﬁ 
:
ﬁﬁ 
$str
ﬁﬁ !
,
ﬁﬁ! "
table
ﬂﬂ 
:
ﬂﬂ 
$str
ﬂﬂ  
,
ﬂﬂ  !
column
‡‡ 
:
‡‡ 
$str
‡‡ $
,
‡‡$ %
unique
·· 
:
·· 
true
·· 
,
·· 
filter
‚‚ 
:
‚‚ 
$str
‚‚ 2
)
‚‚2 3
;
‚‚3 4
migrationBuilder
‰‰ 
.
‰‰ 
CreateIndex
‰‰ $
(
‰‰$ %
name
ÂÂ 
:
ÂÂ 
$str
ÂÂ .
,
ÂÂ. /
table
ÊÊ 
:
ÊÊ 
$str
ÊÊ %
,
ÊÊ% &
column
ÁÁ 
:
ÁÁ 
$str
ÁÁ 
)
ÁÁ 
;
ÁÁ 
migrationBuilder
ÈÈ 
.
ÈÈ 
CreateIndex
ÈÈ $
(
ÈÈ$ %
name
ÍÍ 
:
ÍÍ 
$str
ÍÍ .
,
ÍÍ. /
table
ÎÎ 
:
ÎÎ 
$str
ÎÎ %
,
ÎÎ% &
column
ÏÏ 
:
ÏÏ 
$str
ÏÏ 
)
ÏÏ 
;
ÏÏ 
migrationBuilder
ÓÓ 
.
ÓÓ 
CreateIndex
ÓÓ $
(
ÓÓ$ %
name
ÔÔ 
:
ÔÔ 
$str
ÔÔ 0
,
ÔÔ0 1
table
 
:
 
$str
 $
,
$ %
column
ÒÒ 
:
ÒÒ 
$str
ÒÒ 
)
ÒÒ  
;
ÒÒ  !
migrationBuilder
ÛÛ 
.
ÛÛ 
CreateIndex
ÛÛ $
(
ÛÛ$ %
name
ÙÙ 
:
ÙÙ 
$str
ÙÙ -
,
ÙÙ- .
table
ıı 
:
ıı 
$str
ıı $
,
ıı$ %
column
ˆˆ 
:
ˆˆ 
$str
ˆˆ 
)
ˆˆ 
;
ˆˆ 
migrationBuilder
¯¯ 
.
¯¯ 
CreateIndex
¯¯ $
(
¯¯$ %
name
˘˘ 
:
˘˘ 
$str
˘˘ 
,
˘˘ 
table
˙˙ 
:
˙˙ 
$str
˙˙  
,
˙˙  !
column
˚˚ 
:
˚˚ 
$str
˚˚ %
)
˚˚% &
;
˚˚& '
migrationBuilder
˝˝ 
.
˝˝ 
CreateIndex
˝˝ $
(
˝˝$ %
name
˛˛ 
:
˛˛ 
$str
˛˛ !
,
˛˛! "
table
ˇˇ 
:
ˇˇ 
$str
ˇˇ  
,
ˇˇ  !
column
ÄÄ 
:
ÄÄ 
$str
ÄÄ (
,
ÄÄ( )
unique
ÅÅ 
:
ÅÅ 
true
ÅÅ 
,
ÅÅ 
filter
ÇÇ 
:
ÇÇ 
$str
ÇÇ 6
)
ÇÇ6 7
;
ÇÇ7 8
}
ÉÉ 
}ÑÑ à
yD:\OneDrive\Dokumenty\Programowanie\EPAM\Repos\Gamestore\Gamestore.IdentityRepository\Repositories\RoleClaimRepository.cs
	namespace 	
	Gamestore
 
. 
IdentityRepository &
.& '
Repositories' 3
;3 4
public 
class 
RoleClaimRepository  
(  !
IdentityDbContext! 2
context3 :
): ;
:< = 
IRoleClaimRepository> R
{ 
public		 

async		 
Task		 
AddAsync		 
(		 
	RoleClaim		 (
	roleClaim		) 2
)		2 3
{

 
await 
context 
. 

RoleClaims  
.  !
AddAsync! )
() *
	roleClaim* 3
)3 4
;4 5
} 
public 


IQueryable 
< 
IdentityRoleClaim '
<' (
string( .
>. /
>/ 0"
GetClaimsByRoleIdAsync1 G
(G H
GuidH L
roleIdM S
)S T
{ 
return 
context 
. 

RoleClaims !
.! "
Where" '
(' (
x( )
=>* ,
x- .
.. /
RoleId/ 5
==6 8
roleId9 ?
.? @
ToString@ H
(H I
)I J
)J K
;K L
} 
public 

void  
DeleteClaimsByRoleId $
($ %
string% +
roleId, 2
)2 3
{ 
context 
. 

RoleClaims 
. 
RemoveRange &
(& '
context' .
.. /

RoleClaims/ 9
.9 :
Where: ?
(? @
x@ A
=>B D
xE F
.F G
RoleIdG M
==N P
roleIdQ W
)W X
)X Y
;Y Z
} 
} ˆ
tD:\OneDrive\Dokumenty\Programowanie\EPAM\Repos\Gamestore\Gamestore.IdentityRepository\Repositories\RoleRepository.cs
	namespace 	
	Gamestore
 
. 
IdentityRepository &
.& '
Repositories' 3
;3 4
public 
class 
RoleRepository 
( 
IdentityDbContext -
context. 5
)5 6
:7 8
IRoleRepository9 H
{ 
public		 

void		 
Update		 
(		 
AppRole		 
role		 #
)		# $
{

 
context 
. 
Update 
( 
role 
) 
; 
} 
} 